{"version":3,"sources":["../../../src/parse-express-cookie-session/index-compiled.js"],"names":["_","require","Cookie","options","path","maxAge","httpOnly","encode","encodeURIComponent","decode","decodeURIComponent","prototype","serialize","key","val","name","opt","enc","pairs","push","domain","expires","toUTCString","secure","join","setCurrentParseUser","userSession","id","sessionToken","Parse","User","logOut","_currentUser","Object","_create","_isCurrentUser","_sessionToken","_synchronizeAllAuthData","_refreshCache","_opSetQueue","getCurrentParseUserSession","u","current","getSessionToken","module","exports","cookieOptions","cookie","forcedCookieOptions","defaults","parseExpressCookieSession","req","res","next","signatureSecret","secret","isEmpty","Error","originalUrl","indexOf","reqParseUserSession","reqCookieJson","reqCookieBody","cookies","JSON","parse","e","console","warn","on","resParseUserSession","isUndefined","Date","setHeader","resCookieJson","stringify","fetchUser","_isNullOrUndefined","fetch","then","user"],"mappings":"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","file":"index-compiled.js","sourcesContent":["\"use strict\";var _=require(\"underscore\");var Cookie=function Cookie(options){this.path=\"/\";this.maxAge=null;this.httpOnly=true;//if (options) _.merge(this, options);\n};var encode=encodeURIComponent;var decode=decodeURIComponent;Cookie.prototype.serialize=function(key,val){var serialize=function serialize(name,val,opt){opt=opt||{};var enc=opt.encode||encode;var pairs=[name+'='+enc(val)];if(opt.maxAge)pairs.push('Max-Age='+opt.maxAge);if(opt.domain)pairs.push('Domain='+opt.domain);if(opt.path)pairs.push('Path='+opt.path);if(opt.expires)pairs.push('Expires='+opt.expires.toUTCString());if(opt.httpOnly)pairs.push('HttpOnly');if(opt.secure)pairs.push('Secure');return pairs.join('; ');};return serialize(key,val,this);};var setCurrentParseUser=function setCurrentParseUser(userSession){if(!userSession||!userSession.id||!userSession.sessionToken){// Force cleanup if invalid\nParse.User.logOut();return;}Parse.User._currentUser=Parse.Object._create(\"_User\");Parse.User._currentUser._isCurrentUser=true;Parse.User._currentUser.id=userSession.id;Parse.User._currentUser._sessionToken=userSession.sessionToken;Parse.User._currentUser._synchronizeAllAuthData();Parse.User._currentUser._refreshCache();Parse.User._currentUser._opSetQueue=[{}];};var getCurrentParseUserSession=function getCurrentParseUserSession(){var u=Parse.User.current();if(!u){return;}return{id:u.id,sessionToken:u.getSessionToken()};};module.exports=function(options){options=options||{};var key=options.key||'parse.sess';var cookieOptions=options.cookie||{};var forcedCookieOptions={httpOnly:true,secure:true};// forcedCookieOptions will overwrite same keys in cookieOptions\ncookieOptions=_.defaults(forcedCookieOptions,cookieOptions);return function parseExpressCookieSession(req,res,next){////////////////////////\n// Request path logic\n// Expect express.cookieParser to set req.secret before this middleware.\nvar signatureSecret=req.secret;if(_.isEmpty(signatureSecret)){throw new Error('express.cookieParser middleware must be included'+'before this, and initialized with a signing secret');}var cookie=new Cookie(cookieOptions);// Ignore if cookie path does not match.\nif(req.originalUrl.indexOf(cookie.path)!==0){return next();}// Decrypt and parse the signed cookie.\n// Assume express.cookieParser already verified the signature and put the\n// cookie's contents at req.signedCookies[key].\nvar reqParseUserSession;var reqCookieJson;// Used later to determine whether to set response cookie.\nvar reqCookieBody=req.cookies[key];if(!_.isEmpty(reqCookieBody)){try{reqCookieJson=JSON.parse(reqCookieBody);//reqParseUserSession = JSON.parse(reqCookieBody);//decrypt(reqCookieBody, encryptionSecret);\nif(reqCookieJson&&!reqCookieJson.id||!reqCookieJson.sessionToken){throw\"Invalid session\";}/*if (!Parse._.isEmpty(reqCookieJson)) {\n          reqParseUserSession = utils.parseJSONCookie(reqCookieJson);\n        }*/}catch(e){// Catch any decryption and JSON parsing exceptions.\nconsole.warn(\"Invalid Parse session cookie\");}}setCurrentParseUser(reqCookieJson);////////////////////////\n// Response path logic\nres.on('header',function(){var resParseUserSession=getCurrentParseUserSession();// If user is logged out, clear cookie.\nif(_.isUndefined(resParseUserSession)){cookie.expires=new Date(0);res.setHeader('Set-Cookie',cookie.serialize(key,''));return;}// Only send Parse session cookies via https connection.\n/*if (!req.secure) {\n        console.warn('Skipped setting Parse session cookie because request is not https');\n        return;\n      }*/// Serialize. Prefix is Connect's convention for JSON in cookie.\nresCookieJson=resParseUserSession;// Skip Set-Cookie if cookie is same as request.\nif(reqCookieJson!==resCookieJson){var val=JSON.stringify(resParseUserSession);val=cookie.serialize(key,val);res.setHeader('Set-Cookie',val);// Encrypt and sign. Prefix is Connect's convention for signed cookie.\n//var val = encrypt(resCookieJson, encryptionSecret);\n//val = 's:' + signature.sign(val, signatureSecret);\n}});if(options.fetchUser&&!_isNullOrUndefined(Parse.User.current())){Parse.User.current().fetch().then(function(user){next();},function(){// If user from cookie is invalid, reset Parse.User.current() to null.\nParse.User.logOut();next();});}else{next();}};};//# sourceMappingURL=index-compiled.js.map"]}