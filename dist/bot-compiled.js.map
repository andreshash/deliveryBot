{"version":3,"sources":["bot.js"],"names":[],"mappings":"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","file":"bot-compiled.js","sourcesContent":["'use strict';\n\nvar _slicedToArray = function () { function sliceIterator(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"]) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; } return function (arr, i) { if (Array.isArray(arr)) { return arr; } else if (Symbol.iterator in Object(arr)) { return sliceIterator(arr, i); } else { throw new TypeError(\"Invalid attempt to destructure non-iterable instance\"); } }; }();\n\nvar _server = require('./server');\n\nvar _bodyParser = require('body-parser');\n\nvar _bodyParser2 = _interopRequireDefault(_bodyParser);\n\nvar _config = require('config');\n\nvar _config2 = _interopRequireDefault(_config);\n\nvar _crypto = require('crypto');\n\nvar _crypto2 = _interopRequireDefault(_crypto);\n\nvar _request = require('request');\n\nvar _request2 = _interopRequireDefault(_request);\n\nvar _underscore = require('underscore');\n\nvar _ = _interopRequireWildcard(_underscore);\n\nvar _requestPromise = require('request-promise');\n\nvar _requestPromise2 = _interopRequireDefault(_requestPromise);\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n//import parseExpressHttpsRedirect from 'parse-express-https-redirect'\n//import parseExpressCookieSession from './src/parse-express-cookie-session/index'\n\n// App Secret can be retrieved from the App Dashboard\nvar APP_SECRET = process.env.MESSENGER_APP_SECRET ? process.env.MESSENGER_APP_SECRET : _config2.default.get('APP_SECRET');\n\n// Arbitrary value used to validate a webhook\nvar VALIDATION_TOKEN = process.env.MESSENGER_VALIDATION_TOKEN ? process.env.MESSENGER_VALIDATION_TOKEN : _config2.default.get('VALIDATION_TOKEN');\n\n// Generate a page access token for your page from the App Dashboard\nvar PAGE_ACCESS_TOKEN = process.env.MESSENGER_PAGE_ACCESS_TOKEN ? process.env.MESSENGER_PAGE_ACCESS_TOKEN : _config2.default.get('PAGE_ACCESS_TOKEN');\n\n// URL where the app is running (include protocol). Used to point to scripts and\n// assets located at this address.\nvar SERVER_URL = process.env.SERVER_URL ? process.env.SERVER_URL : _config2.default.get('SERVER_URL');\n\nvar FACEBOOK_APP_ID = process.env.FACEBOOK_APP_ID ? process.env.FACEBOOK_APP_ID : _config2.default.get('FACEBOOK_APP_ID');\n\nvar REDIRECT_URI = process.env.REDIRECT_URI ? process.env.REDIRECT_URI : _config2.default.get('REDIRECT_URI');\n\nvar limit = 9;\n\nif (!(APP_SECRET && VALIDATION_TOKEN && PAGE_ACCESS_TOKEN && SERVER_URL)) {\n    console.error(\"Missing config values\");\n    process.exit(1);\n}\n\n_server.app.use(_bodyParser2.default.json({ verify: verifyRequestSignature }));\n//app.use(parseExpressHttpsRedirect());\n//app.use(parseExpressCookieSession({ fetchUser: true }));\n\nvar listener = {};\nvar buffer = {};\nvar rules = new Map();\nvar payloadRules = new Map();\n\n/*\n * Verify that the callback came from Facebook. Using the App Secret from\n * the App Dashboard, we can verify the signature that is sent with each\n * callback in the x-hub-signature field, located in the header.\n *\n * https://developers.facebook.com/docs/graph-api/webhooks#setup\n *\n */\nfunction verifyRequestSignature(req, res, buf) {\n    var signature = req.headers[\"x-hub-signature\"];\n\n    if (!signature) {\n        // For testing, let's log an error. In production, you should throw an\n        // error.\n        console.error(\"Couldn't validate the signature.\");\n    } else {\n        var elements = signature.split('=');\n        var method = elements[0];\n        var signatureHash = elements[1];\n\n        var expectedHash = _crypto2.default.createHmac('sha1', APP_SECRET).update(buf).digest('hex');\n\n        if (signatureHash != expectedHash) {\n            throw new Error(\"Couldn't validate the request signature.\");\n        }\n    }\n}\n\n/*\n * Authorization Event\n *\n * The value for 'optin.ref' is defined in the entry point. For the \"Send to\n * Messenger\" plugin, it is the 'data-ref' field. Read more at\n * https://developers.facebook.com/docs/messenger-platform/webhook-reference/authentication\n *\n */\nfunction receivedAuthentication(event) {\n    var senderID = event.sender.id;\n    var recipientID = event.recipient.id;\n    var timeOfAuth = event.timestamp;\n\n    // The 'ref' field is set in the 'Send to Messenger' plugin, in the 'data-ref'\n    // The developer can set this to an arbitrary value to associate the\n    // authentication callback with the 'Send to Messenger' click event. This is\n    // a way to do account linking when the user clicks the 'Send to Messenger'\n    // plugin.\n\n    senderID = parseInt(senderID);\n    var passThroughParam = event.optin.ref;\n\n    console.log(\"Received authentication for user %d and page %d with pass \" + \"through param '%s' at %d\", senderID, recipientID, passThroughParam, timeOfAuth);\n\n    // When an authentication is received, we'll send a message back to the sender\n    // to let them know it was successful.\n    sendTextMessage(senderID, \"Authentication successful\");\n}\n\n/*\n * Message Event\n *\n * This event is called when a message is sent to your page. The 'message'\n * object format can vary depending on the kind of message that was received.\n * Read more at https://developers.facebook.com/docs/messenger-platform/webhook-reference/message-received\n *\n * For this example, we're going to echo any text that we get. If we get some\n * special keywords ('button', 'generic', 'receipt'), then we'll send back\n * examples of those bubbles to illustrate the special message bubbles we've\n * created. If we receive a message with an attachment (image, video, audio),\n * then we'll simply confirm that we've received the attachment.\n *\n */\nfunction receivedMessage(event) {\n    var senderID = event.sender.id;\n    var recipientID = event.recipient.id;\n    var timeOfMessage = event.timestamp;\n    var message = event.message;\n\n    //console.log(\"Received message for user %d and page %d at %d with message:\", senderID, recipientID, timeOfMessage);\n    //console.log(JSON.stringify(message));\n\n    var isEcho = message.is_echo;\n    var messageId = message.mid;\n    var appId = message.app_id;\n    var metadata = message.metadata;\n\n    // You may get a text or attachment but not both\n    var messageText = message.text;\n    var messageAttachments = message.attachments;\n    var quickReply = message.quick_reply;\n\n    senderID = parseInt(senderID);\n\n    if (isEcho) {\n        // Just logging message echoes to console\n        console.log(\"Received echo for message %s and app %d with metadata %s\", messageId, appId, metadata);\n        return;\n    } else if (quickReply) {\n        var quickReplyPayload = quickReply.payload;\n        //console.log(\"Quick reply for message %s with payload %s\", messageId, quickReplyPayload);\n        var payloadFunction;\n\n        if (quickReplyPayload.includes('-')) {\n            var params = quickReplyPayload.split('-');\n            payloadFunction = payloadRules.get(params[0]);\n            //console.log(senderID);\n            //console.log(typeof senderID);\n            if (payloadFunction) {\n                payloadFunction(senderID, params[1]);\n            }\n        } else {\n            payloadFunction = payloadRules.get(quickReplyPayload);\n\n            if (payloadFunction) {\n                payloadFunction(senderID);\n            }\n            /*\n             payloadFunction = findKeyStartsWith(payloadRules, quickReplyPayload);\n             if(payloadFunction){\n             payloadFunction(senderID);\n             }*/\n        }\n        //sendTextMessage(senderID, \"Quick reply tapped\");\n\n        return;\n    } else if (messageText) {\n        // If we receive a text message, check to see if it matches any special\n        // keywords and send back the corresponding example. Otherwise, just echo\n        // the text we received.\n\n        //Object.keys(listener);\n        var userListeners = listener[senderID];\n        var existRule = false;\n        //console.log(senderID);\n        //console.log(typeof senderID);\n\n        if (!_.isEmpty(userListeners)) {\n            if (!buffer[senderID]) {\n                buffer[senderID] = {};\n            }\n            var keys = Object.keys(userListeners);\n            var key = keys.shift();\n\n            //console.log('User Listeners');\n\n            while (key) {\n                //console.log(key);\n                if (userListeners[key].type == 'text') {\n                    buffer[senderID][key] = messageText;\n                    userListeners[key].callback(senderID);\n                    existRule = true;\n                }\n                delete userListeners[key];\n                key = keys.shift();\n            }\n        } else {\n            messageText = messageText.toLowerCase();\n\n            rules.forEach(function (value, key) {\n                if (messageText.includes(key)) {\n                    value(senderID);\n                    existRule = true;\n                }\n            });\n        }\n\n        if (!existRule) {\n            //console.log(messageText);\n            //console.log(defaultSearch);\n            defaultSearch(senderID, messageText);\n        }\n        /*\n           switch (messageText) {\n         case 'image':\n         sendImageMessage(senderID);\n         break;\n          case 'gif':\n         sendGifMessage(senderID);\n         break;\n          case 'audio':\n         sendAudioMessage(senderID);\n         break;\n          case 'video':\n         sendVideoMessage(senderID);\n         break;\n          case 'file':\n         sendFileMessage(senderID);\n         break;\n          case 'button':\n         sendButtonMessage(senderID);\n         break;\n          case 'generic':\n         sendGenericMessage(senderID);\n         break;\n          case 'receipt':\n         sendReceiptMessage(senderID);\n         break;\n          case 'quick reply':\n         sendQuickReply(senderID);\n         break;\n          case 'read receipt':\n         sendReadReceipt(senderID);\n         break;\n          case 'typing on':\n         sendTypingOn(senderID);\n         break;\n          case 'typing off':\n         sendTypingOff(senderID);\n         break;\n          case 'account linking':\n         sendAccountLinking(senderID);\n         break;\n          default:\n         sendTextMessage(senderID, messageText);\n         }\n         /*\n         if (messageText.indexOf(\"hola\") > -1){\n         sendMenuMessage(senderID);\n         }\n         else if (messageText.indexOf(\"buenos dias\") > -1){\n         sendMenuMessage(senderID);\n         }\n         else if (messageText.indexOf(\"menu del dia\") > -1){\n         sendMenuMessage(senderID);\n         }\n         else if (messageText.indexOf(\"cuenta\") > -1){\n         sendBillMessage(senderID);\n         }\n         */\n    } else if (messageAttachments) {\n        if (messageAttachments[0].type == 'location') {\n            var location = messageAttachments[0].payload.coordinates;\n            var userListeners = listener[senderID];\n            //console.log(senderID);\n            //console.log(typeof senderID);\n            if (!_.isEmpty(userListeners)) {\n                if (!buffer[senderID]) {\n                    buffer[senderID] = {};\n                }\n                var keys = Object.keys(userListeners);\n                var key = keys.shift();\n\n                while (key) {\n                    console.log(key);\n                    if (userListeners[key].type == 'attachment') {\n                        buffer[senderID][key] = { lat: location.lat, lng: location.long };\n                        userListeners[key].callback(senderID);\n                    }\n                    delete userListeners[key];\n                    key = keys.shift();\n                }\n            }\n        }\n        //sendTextMessage(senderID, \"Message with attachment received\");\n    }\n}\n\n/*\n * Delivery Confirmation Event\n *\n * This event is sent to confirm the delivery of a message. Read more about\n * these fields at https://developers.facebook.com/docs/messenger-platform/webhook-reference/message-delivered\n *\n */\nfunction receivedDeliveryConfirmation(event) {\n    var senderID = event.sender.id;\n    var recipientID = event.recipient.id;\n    var delivery = event.delivery;\n    var messageIDs = delivery.mids;\n    var watermark = delivery.watermark;\n    var sequenceNumber = delivery.seq;\n\n    senderID = parseInt(senderID);\n\n    if (messageIDs) {\n        messageIDs.forEach(function (messageID) {\n            //console.log(\"Received delivery confirmation for message ID: %s\", messageID);\n        });\n    }\n\n    //console.log(\"All message before %d were delivered.\", watermark);\n}\n\n/*\n * Postback Event\n *\n * This event is called when a postback is tapped on a Structured Message.\n * https://developers.facebook.com/docs/messenger-platform/webhook-reference/postback-received\n *\n */\nfunction receivedPostback(event) {\n    var senderID = event.sender.id;\n    var recipientID = event.recipient.id;\n    var timeOfPostback = event.timestamp;\n\n    // The 'payload' param is a developer-defined field which is set in a postback\n    // button for Structured Messages.\n    var payload = event.postback.payload;\n\n    //console.log(\"Received postback for user %d and page %d with payload '%s' \" + \"at %d\", senderID, recipientID, payload, timeOfPostback);\n\n    // When a postback is called, we'll send a message back to the sender to\n    // let them know it was successful\n\n    var payloadFunction;\n\n    var params = payload.split('-');\n\n    payloadFunction = payloadRules.get(params[0]);\n    senderID = parseInt(senderID);\n\n    //console.log(senderID);\n    //console.log(typeof senderID);\n\n    if (payloadFunction) {\n        switch (params.length) {\n            case 1:\n                payloadFunction(senderID);\n                break;\n            case 2:\n                payloadFunction(senderID, params[1]);\n                break;\n            case 3:\n                payloadFunction(senderID, params[1], params[2]);\n                break;\n            default:\n                console.log('Payload not found: ' + params);\n        }\n    }\n\n    /*\n    if(payload == 'Greeting'){\n        sendMenuMessage(senderID);\n    }\n    else if(payload == 'Delivery'){\n        sendMenuMessage(senderID);\n    }\n    else if(payload.startsWith(\"ListCategories\")){\n        var params = payload.split(\"-\");\n        console.log(\"List Categories\");\n        console.log(params);\n        listCategories(senderID, parseInt(params[1]));\n    }\n    else if(payload.startsWith(\"ListProducts\")){\n        var params = payload.split(\"-\");\n        listProducts(senderID, params[1], parseInt(params[2]));\n    }\n    else if(payload.startsWith(\"Add\")){\n        var params = payload.split(\"-\");\n        addProduct(params[1]);\n    }\n    else if(payload.startsWith(\"ShoppingCart\")){\n        sendBillMessage(senderID);\n    }\n    else{\n        sendTextMessage(senderID, \"Postback called \"+payload);\n    }\n    */\n}\n\n/*\n * Message Read Event\n *\n * This event is called when a previously-sent message has been read.\n * https://developers.facebook.com/docs/messenger-platform/webhook-reference/message-read\n *\n */\nfunction receivedMessageRead(event) {\n    var senderID = event.sender.id;\n    var recipientID = event.recipient.id;\n\n    // All messages before watermark (a timestamp) or sequence have been seen.\n    var watermark = event.read.watermark;\n    var sequenceNumber = event.read.seq;\n\n    senderID = parseInt(senderID);\n\n    console.log(\"Received message read event for watermark %d and sequence \" + \"number %d\", watermark, sequenceNumber);\n}\n\n/*\n * Account Link Event\n *\n * This event is called when the Link Account or UnLink Account action has been\n * tapped.\n * https://developers.facebook.com/docs/messenger-platform/webhook-reference/account-linking\n *\n */\nfunction receivedAccountLink(event) {\n    var senderID = event.sender.id;\n    var recipientID = event.recipient.id;\n\n    var status = event.account_linking.status;\n    var authCode = event.account_linking.authorization_code;\n\n    senderID = parseInt(senderID);\n\n    console.log(\"Received account link event with for user %d with status %s \" + \"and auth code %s \", senderID, status, authCode);\n}\n\n/*\n * Call the Send API. The message data goes in the body. If successful, we'll\n * get the message id in a response\n *\n */\nfunction callSendAPI(messageData, callback) {\n    (0, _request2.default)({\n        uri: 'https://graph.facebook.com/v2.7/me/messages',\n        qs: { access_token: PAGE_ACCESS_TOKEN },\n        method: 'POST',\n        json: messageData\n\n    }, function (error, response, body) {\n        if (!error && response.statusCode == 200) {\n            var recipientId = body.recipient_id;\n            var messageId = body.message_id;\n\n            if (messageId) {\n                if (callback) callback(recipientId);\n                //console.log(\"Successfully sent message with id %s to recipient %s\", messageId, recipientId);\n            } else {\n                    //console.log(\"Successfully called Send API for recipient %s\", recipientId);\n                }\n        } else {\n            console.error(response);\n            console.error(body);\n            console.error(error);\n        }\n    });\n}\n\n/*\n * Turn typing indicator on\n *\n */\nfunction sendTypingOn(recipientId) {\n    //console.log(\"Turning typing indicator on\");\n\n    var messageData = {\n        recipient: {\n            id: recipientId\n        },\n        sender_action: \"typing_on\"\n    };\n\n    callSendAPI(messageData);\n}\n\n/*\n * Turn typing indicator off\n *\n */\nfunction sendTypingOff(recipientId) {\n    //console.log(\"Turning typing indicator off\");\n\n    var messageData = {\n        recipient: {\n            id: recipientId\n        },\n        sender_action: \"typing_off\"\n    };\n\n    callSendAPI(messageData);\n}\n\n/*\n * Send a text message using the Send API.\n *\n */\nfunction sendTextMessage(recipientId, messageText) {\n    var messageData = {\n        recipient: {\n            id: recipientId\n        },\n        message: {\n            text: messageText,\n            metadata: \"DEVELOPER_DEFINED_METADATA\"\n        }\n    };\n\n    callSendAPI(messageData);\n}\n\n/*\n * Send an image using the Send API.\n *\n */\nfunction sendImageMessage(recipientId) {\n    var messageData = {\n        recipient: {\n            id: recipientId\n        },\n        message: {\n            attachment: {\n                type: \"image\",\n                payload: {\n                    url: SERVER_URL + \"/assets/rift.png\"\n                }\n            }\n        }\n    };\n\n    callSendAPI(messageData);\n}\n\n/*\n * Send a Gif using the Send API.\n *\n */\nfunction sendGifMessage(recipientId) {\n    var messageData = {\n        recipient: {\n            id: recipientId\n        },\n        message: {\n            attachment: {\n                type: \"image\",\n                payload: {\n                    url: SERVER_URL + \"/assets/instagram_logo.gif\"\n                }\n            }\n        }\n    };\n\n    callSendAPI(messageData);\n}\n\n/*\n * Send audio using the Send API.\n *\n */\nfunction sendAudioMessage(recipientId) {\n    var messageData = {\n        recipient: {\n            id: recipientId\n        },\n        message: {\n            attachment: {\n                type: \"audio\",\n                payload: {\n                    url: SERVER_URL + \"/assets/sample.mp3\"\n                }\n            }\n        }\n    };\n\n    callSendAPI(messageData);\n}\n\n/*\n * Send a video using the Send API.\n *\n */\nfunction sendVideoMessage(recipientId) {\n    var messageData = {\n        recipient: {\n            id: recipientId\n        },\n        message: {\n            attachment: {\n                type: \"video\",\n                payload: {\n                    url: SERVER_URL + \"/assets/allofus480.mov\"\n                }\n            }\n        }\n    };\n\n    callSendAPI(messageData);\n}\n\n/*\n * Send a video using the Send API.\n *\n */\nfunction sendFileMessage(recipientId) {\n    var messageData = {\n        recipient: {\n            id: recipientId\n        },\n        message: {\n            attachment: {\n                type: \"file\",\n                payload: {\n                    url: SERVER_URL + \"/assets/test.txt\"\n                }\n            }\n        }\n    };\n\n    callSendAPI(messageData);\n}\n\n/*\n * Send a button message using the Send API.\n *\n */\nfunction sendButtonMessage(recipientId) {\n    var messageData = {\n        recipient: {\n            id: recipientId\n        },\n        message: {\n            attachment: {\n                type: \"template\",\n                payload: {\n                    template_type: \"button\",\n                    text: \"This is test text\",\n                    buttons: [{\n                        type: \"web_url\",\n                        url: \"https://www.oculus.com/en-us/rift/\",\n                        title: \"Open Web URL\"\n                    }, {\n                        type: \"postback\",\n                        title: \"Trigger Postback\",\n                        payload: \"DEVELOPED_DEFINED_PAYLOAD\"\n                    }, {\n                        type: \"phone_number\",\n                        title: \"Call Phone Number\",\n                        payload: \"+16505551234\"\n                    }]\n                }\n            }\n        }\n    };\n\n    callSendAPI(messageData);\n}\n\n/*\n * Send a Structured Message (Generic Message type) using the Send API.\n *\n */\nfunction sendGenericMessage(recipientId) {\n    var messageData = {\n        recipient: {\n            id: recipientId\n        },\n        message: {\n            attachment: {\n                type: \"template\",\n                payload: {\n                    template_type: \"generic\",\n                    elements: [{\n                        title: \"rift\",\n                        subtitle: \"Next-generation virtual reality\",\n                        item_url: \"https://www.oculus.com/en-us/rift/\",\n                        image_url: SERVER_URL + \"/assets/rift.png\",\n                        buttons: [{\n                            type: \"web_url\",\n                            url: \"https://www.oculus.com/en-us/rift/\",\n                            title: \"Open Web URL\"\n                        }, {\n                            type: \"postback\",\n                            title: \"Call Postback\",\n                            payload: \"Payload for first bubble\"\n                        }]\n                    }, {\n                        title: \"touch\",\n                        subtitle: \"Your Hands, Now in VR\",\n                        item_url: \"https://www.oculus.com/en-us/touch/\",\n                        image_url: SERVER_URL + \"/assets/touch.png\",\n                        buttons: [{\n                            type: \"web_url\",\n                            url: \"https://www.oculus.com/en-us/touch/\",\n                            title: \"Open Web URL\"\n                        }, {\n                            type: \"postback\",\n                            title: \"Call Postback\",\n                            payload: \"Payload for second bubble\"\n                        }]\n                    }]\n                }\n            }\n        }\n    };\n\n    callSendAPI(messageData);\n}\n\n/*\n * Send a receipt message using the Send API.\n *\n */\nfunction sendReceiptMessage(recipientId) {\n    // Generate a random receipt ID as the API requires a unique ID\n    var receiptId = \"order\" + Math.floor(Math.random() * 1000);\n\n    var messageData = {\n        recipient: {\n            id: recipientId\n        },\n        message: {\n            attachment: {\n                type: \"template\",\n                payload: {\n                    template_type: \"receipt\",\n                    recipient_name: \"Peter Chang\",\n                    order_number: receiptId,\n                    currency: \"COP\",\n                    payment_method: \"Visa 1234\",\n                    timestamp: \"1428444852\",\n                    elements: [{\n                        title: \"Oculus Rift\",\n                        subtitle: \"Includes: headset, sensor, remote\",\n                        quantity: 1,\n                        price: 599.00,\n                        currency: \"USD\",\n                        image_url: SERVER_URL + \"/assets/riftsq.png\"\n                    }, {\n                        title: \"Samsung Gear VR\",\n                        subtitle: \"Frost White\",\n                        quantity: 1,\n                        price: 99.99,\n                        currency: \"USD\",\n                        image_url: SERVER_URL + \"/assets/gearvrsq.png\"\n                    }],\n                    address: {\n                        street_1: \"1 Hacker Way\",\n                        street_2: \"\",\n                        city: \"Menlo Park\",\n                        postal_code: \"94025\",\n                        state: \"CA\",\n                        country: \"US\"\n                    },\n                    summary: {\n                        subtotal: 698.99,\n                        shipping_cost: 20.00,\n                        total_tax: 57.67,\n                        total_cost: 626.66\n                    },\n                    adjustments: [{\n                        name: \"New Customer Discount\",\n                        amount: -50\n                    }, {\n                        name: \"$100 Off Coupon\",\n                        amount: -100\n                    }]\n                }\n            }\n        }\n    };\n\n    callSendAPI(messageData);\n}\n\n/*\n * Send a message with Quick Reply buttons.\n *\n */\nfunction sendQuickReply(recipientId) {\n    var messageData = {\n        recipient: {\n            id: recipientId\n        },\n        message: {\n            text: \"What's your favorite movie genre?\",\n            metadata: \"DEVELOPER_DEFINED_METADATA\",\n            quick_replies: [{\n                \"content_type\": \"text\",\n                \"title\": \"Action\",\n                \"payload\": \"DEVELOPER_DEFINED_PAYLOAD_FOR_PICKING_ACTION\"\n            }, {\n                \"content_type\": \"text\",\n                \"title\": \"Comedy\",\n                \"payload\": \"DEVELOPER_DEFINED_PAYLOAD_FOR_PICKING_COMEDY\"\n            }, {\n                \"content_type\": \"text\",\n                \"title\": \"Drama\",\n                \"payload\": \"DEVELOPER_DEFINED_PAYLOAD_FOR_PICKING_DRAMA\"\n            }]\n        }\n    };\n\n    callSendAPI(messageData);\n}\n\n/*\n * Send a read receipt to indicate the message has been read\n *\n */\nfunction sendReadReceipt(recipientId) {\n    console.log(\"Sending a read receipt to mark message as seen\");\n\n    var messageData = {\n        recipient: {\n            id: recipientId\n        },\n        sender_action: \"mark_seen\"\n    };\n\n    callSendAPI(messageData);\n}\n\n/*\n * Send a message with the account linking call-to-action\n *\n */\nfunction sendAccountLinking(recipientId) {\n    var messageData = {\n        recipient: {\n            id: recipientId\n        },\n        message: {\n            attachment: {\n                type: \"template\",\n                payload: {\n                    template_type: \"button\",\n                    text: \"Welcome. Link your account.\",\n                    buttons: [{\n                        type: \"account_link\",\n                        url: SERVER_URL + \"/authorize\"\n                    }]\n                }\n            }\n        }\n    };\n\n    callSendAPI(messageData);\n}\n\nfunction findKeyStartsWith(map, str) {\n    var _iteratorNormalCompletion = true;\n    var _didIteratorError = false;\n    var _iteratorError = undefined;\n\n    try {\n        for (var _iterator = map[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n            var _step$value = _slicedToArray(_step.value, 2);\n\n            var key = _step$value[0];\n            var value = _step$value[1];\n\n            if (key.startsWith(str)) return value;\n        }\n    } catch (err) {\n        _didIteratorError = true;\n        _iteratorError = err;\n    } finally {\n        try {\n            if (!_iteratorNormalCompletion && _iterator.return) {\n                _iterator.return();\n            }\n        } finally {\n            if (_didIteratorError) {\n                throw _iteratorError;\n            }\n        }\n    }\n\n    return undefined;\n}\n\nfunction getFacebookUser(recipientId, callback) {\n    return (0, _requestPromise2.default)({\n        uri: 'https://graph.facebook.com/v2.7/' + recipientId,\n        qs: { access_token: PAGE_ACCESS_TOKEN, fields: 'first_name,last_name,locale,timezone,gender' },\n        method: 'GET'\n    }).then(function (body) {\n        return JSON.parse(body);\n    }).catch(function (error) {\n        console.log('error');\n        console.log(error);\n    });\n\n    /*\n    if (!error && response.statusCode == 200) {\n        var pathname = response.request.uri.pathname;\n        var recipientId = pathname.split('/').pop();\n        var userData = JSON.parse(body);\n        var commerce = new Parse.Query(ParseModels.Customer);\n         //user.equalTo('authData', {\"facebook\":        {\"access_token\":\"EAAPK2ME0gLkBAE6HMBKLP2RfquPvCIyaXNuItGYRdBpJNArGCZC9UzITl9ZBB7EKnmuukylXS93yhHOZAUiHjPwGyNBmnb11VPB7kf0Km9o2Gm2hFSJhDmjpZA1bfZCITRQ45OCMVAIWSR3jHIjkg3cze6tSvZBQjKdGkalGA1V7E0npkZAcMPn51z2yLAPJVRzRpbTqNCTtNPIhxpBr7H2\",\"expiration_date\":\"2016-10-02T15:16:42.000Z\",\"id\":\"10210218101474882\"}})\n         commerce.contains('businessId', BUSINESS_ID);\n         commerce.find().then(function(results){\n                var currentUser = Parse.User.current();\n                var image_url = results[0].get('image').url();\n                 console.log('data');\n                console.log(userData);\n                console.log(recipientId);\n                console.log(results);\n                console.log(image_url);\n                  var messageData = {\n                    recipient: {\n                        id: recipientId\n                    },\n                    message: {\n                        attachment: {\n                            type: \"template\",\n                            payload: {\n                                template_type: \"generic\",\n                                //text: \"Buenos dias, para conocer nuestros menus del dia, por favor escoja una opción:\",\n                                elements: [{\n                                    \"title\":     \"Hola \"+userData.first_name+\", Bienvenido a OXXO. \",\n                                    \"subtitle\":  \"Aquí puedes pedir un domicilio, escribe o selecciona alguna de las opciones:\",\n                                    \"image_url\": image_url,\n                                    \"buttons\":[\n                                        {\n                                            \"type\":\"postback\",\n                                            \"title\":\"Pedir domicilio\",\n                                            \"payload\":\"ListCategories-0\"\n                                        },\n                                        {\n                                            \"type\":\"postback\",\n                                            \"title\":\"Pedir para recoger\",\n                                            \"payload\":\"ListCategories-0\"\n                                        },\n                                        {\n                                            \"type\":\"postback\",\n                                            \"title\":\"Servicio al cliente\",\n                                            \"payload\":\"ListCategories-0\"\n                                        }\n                                    ]\n                                }]\n                            }\n                        }\n                    }\n                };\n                 bot.sendTypingOff(recipientId);\n                bot.callSendAPI(messageData);\n            },\n            function(error) {\n                console.log(\"Lookup failed\");\n            });\n    } else {\n        console.error(response.error);\n    }*/\n}\n\nfunction setListener(recipientId, dataId, type, callback) {\n    if (typeof listener[recipientId] == 'undefined') {\n        listener[recipientId] = {};\n    }\n\n    listener[recipientId][dataId] = { callback: callback, type: type };\n\n    /*\n     // input dataId =  consumerAddress[address]\n     var id;\n    var ref = listener[recipientId]\n    var elements = dataId.split(/[\\[|\\]]+/g).filter(function(el) {return el.length != 0});\n     while(elements.length != 0){\n        id = elements.shift();\n        if(elements.length == 0){\n            ref[id] = callback\n        }\n        else if(!ref[id]){\n            ref[id] = {}\n        }\n        ref = ref[id];\n    };*/\n}\n\nfunction getListener(recipientId, dataId) {\n    if (typeof listener[recipientId] == 'undefined') {\n        return undefined;\n    }\n\n    return listener[recipientId][dataId];\n    /*\n      // input dataId =  consumerAddress[address]\n      var id;\n     var ref = listener[recipientId]\n     var elements = dataId.split(/[\\[|\\]]+/g).filter(function(el) {return el.length != 0});\n      while(elements.length != 0){\n     id = elements.shift();\n     if(elements.length == 0){\n     ref[id] = callback\n     }\n     else if(!ref[id]){\n     ref[id] = {}\n     }\n     ref = ref[id];\n     };*/\n}\n\nfunction deleteListener(recipientId, dataId) {\n    if (!listener[recipientId]) {\n        return false;\n    }\n\n    delete listener[recipientId][dataId];\n    return true;\n}\n\nfunction defaultSearch(recipientId, query) {\n    //console.log('defaultSearch');\n    //console.log(search);\n    var search = payloadRules.get('Search');\n\n    if (search) {\n        search(recipientId, query);\n    }\n};\n\n/*\n * Use your own validation token. Check that the token used in the Webhook\n * setup is the same token used here.\n *\n */\n_server.app.get('/webhook', function (req, res) {\n    if (req.query['hub.mode'] === 'subscribe' && req.query['hub.verify_token'] === VALIDATION_TOKEN) {\n        console.log(\"Validating webhook\");\n        res.status(200).send(req.query['hub.challenge']);\n    } else {\n        console.error(\"Failed validation. Make sure the validation tokens match.\");\n        res.sendStatus(403);\n    }\n});\n\n/*\n * All callbacks for Messenger are POST-ed. They will be sent to the same\n * webhook. Be sure to subscribe your app to your page to receive callbacks\n * for your page.\n * https://developers.facebook.com/docs/messenger-platform/product-overview/setup#subscribe_app\n *\n */\n_server.app.post('/webhook', function (req, res) {\n    var data = req.body;\n\n    // Make sure this is a page subscription\n    if (data.object == 'page') {\n        // Iterate over each entry\n        // There may be multiple if batched\n        data.entry.forEach(function (pageEntry) {\n            var pageID = pageEntry.id;\n            var timeOfEvent = pageEntry.time;\n\n            // Iterate over each messaging event\n            pageEntry.messaging.forEach(function (messagingEvent) {\n                //console.log(messagingEvent);\n                if (messagingEvent.optin) {\n                    receivedAuthentication(messagingEvent);\n                } else if (messagingEvent.message) {\n                    receivedMessage(messagingEvent);\n                } else if (messagingEvent.delivery) {\n                    receivedDeliveryConfirmation(messagingEvent);\n                } else if (messagingEvent.postback) {\n                    receivedPostback(messagingEvent);\n                } else if (messagingEvent.read) {\n                    receivedMessageRead(messagingEvent);\n                } else if (messagingEvent.account_linking) {\n                    receivedAccountLink(messagingEvent);\n                } else {\n                    console.log(\"Webhook received unknown messagingEvent: \", messagingEvent);\n                }\n            });\n        });\n\n        // Assume all went well.\n        //\n        // You must send back a 200, within 20 seconds, to let us know you've\n        // successfully received the callback. Otherwise, the request will time out.\n        res.sendStatus(200);\n    }\n});\n\n/*\n * This path is used for account linking. The account linking call-to-action\n * (sendAccountLinking) is pointed to this URL.\n *\n */\n_server.app.get('/authorize', function (req, res) {\n    var accountLinkingToken = req.query['account_linking_token'];\n    var redirectURI = req.query['redirect_uri'];\n\n    // Authorization Code should be generated per user by the developer. This will\n    // be passed to the Account Linking callback.\n    var authCode = \"1234567890\";\n\n    // Redirect users to this URI on successful login\n    var redirectURISuccess = redirectURI + \"&authorization_code=\" + authCode;\n\n    res.render('authorize', {\n        accountLinkingToken: accountLinkingToken,\n        redirectURI: redirectURI,\n        redirectURISuccess: redirectURISuccess\n    });\n});\n\n// Start server\n// Webhooks must be available via SSL with a certificate signed by a valid\n// certificate authority.\n_server.app.listen(_server.app.get('port'), function () {\n    //console.log('Node app is running on port', app.get('port'));\n});\n\nmodule.exports = { app: _server.app, Parse: _server.Parse, rules: rules, payloadRules: payloadRules, buffer: buffer, listener: listener, limit: limit, defaultSearch: defaultSearch, callSendAPI: callSendAPI, sendTypingOn: sendTypingOn, sendTypingOff: sendTypingOff, getFacebookUser: getFacebookUser, setListener: setListener, getListener: getListener, deleteListener: deleteListener };"]}