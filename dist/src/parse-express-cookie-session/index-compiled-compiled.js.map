{"version":3,"sources":["index-compiled.js"],"names":[],"mappings":"AAAA,aAAa,GAAI,GAAE,QAAQ,YAAR,CAAN,CAA4B,GAAI,QAAO,QAAS,OAAT,CAAgB,OAAhB,CAAwB,CAAC,KAAK,IAAL,CAAU,GAAV,CAAc,KAAK,MAAL,CAAY,IAAZ,CAAiB,KAAK,QAAL,CAAc,IAAd,CAAmB;AAC9H,CADwC,CACvC,GAAI,QAAO,kBAAX,CAA8B,GAAI,QAAO,kBAAX,CAA8B,OAAO,SAAP,CAAiB,SAAjB,CAA2B,SAAS,GAAT,CAAa,GAAb,CAAiB,CAAC,GAAI,WAAU,QAAS,UAAT,CAAmB,IAAnB,CAAwB,GAAxB,CAA4B,GAA5B,CAAgC,CAAC,IAAI,KAAK,EAAT,CAAY,GAAI,KAAI,IAAI,MAAJ,EAAY,MAApB,CAA2B,GAAI,OAAM,CAAC,KAAK,GAAL,CAAS,IAAI,GAAJ,CAAV,CAAV,CAA8B,GAAG,IAAI,MAAP,CAAc,MAAM,IAAN,CAAW,WAAW,IAAI,MAA1B,EAAkC,GAAG,IAAI,MAAP,CAAc,MAAM,IAAN,CAAW,UAAU,IAAI,MAAzB,EAAiC,GAAG,IAAI,IAAP,CAAY,MAAM,IAAN,CAAW,QAAQ,IAAI,IAAvB,EAA6B,GAAG,IAAI,OAAP,CAAe,MAAM,IAAN,CAAW,WAAW,IAAI,OAAJ,CAAY,WAAZ,EAAtB,EAAiD,GAAG,IAAI,QAAP,CAAgB,MAAM,IAAN,CAAW,UAAX,EAAuB,GAAG,IAAI,MAAP,CAAc,MAAM,IAAN,CAAW,QAAX,EAAqB,MAAO,OAAM,IAAN,CAAW,IAAX,CAAP,CAAyB,CAA/Z,CAAga,MAAO,WAAU,GAAV,CAAc,GAAd,CAAkB,IAAlB,CAAP,CAAgC,CAA7e,CAA8e,GAAI,qBAAoB,QAAS,oBAAT,CAA6B,WAA7B,CAAyC,CAAC,GAAG,CAAC,WAAD,EAAc,CAAC,YAAY,EAA3B,EAA+B,CAAC,YAAY,YAA/C,CAA4D,CAAC;AAC3qB,MAAM,IAAN,CAAW,MAAX,GAAoB,OAAQ,OAAM,IAAN,CAAW,YAAX,CAAwB,MAAM,MAAN,CAAa,OAAb,CAAqB,OAArB,CAAxB,CAAsD,MAAM,IAAN,CAAW,YAAX,CAAwB,cAAxB,CAAuC,IAAvC,CAA4C,MAAM,IAAN,CAAW,YAAX,CAAwB,EAAxB,CAA2B,YAAY,EAAvC,CAA0C,MAAM,IAAN,CAAW,YAAX,CAAwB,aAAxB,CAAsC,YAAY,YAAlD,CAA+D,MAAM,IAAN,CAAW,YAAX,CAAwB,uBAAxB,GAAkD,MAAM,IAAN,CAAW,YAAX,CAAwB,aAAxB,GAAwC,MAAM,IAAN,CAAW,YAAX,CAAwB,WAAxB,CAAoC,CAAC,EAAD,CAApC,CAA0C,CADiM,CAChM,GAAI,4BAA2B,QAAS,2BAAT,EAAqC,CAAC,GAAI,GAAE,MAAM,IAAN,CAAW,OAAX,EAAN,CAA2B,GAAG,CAAC,CAAJ,CAAM,CAAC,OAAQ,OAAM,CAAC,GAAG,EAAE,EAAN,CAAS,aAAa,EAAE,eAAF,EAAtB,CAAN,CAAkD,CAAjK,CAAkK,OAAO,OAAP,CAAe,SAAS,OAAT,CAAiB,CAAC,QAAQ,SAAS,EAAjB,CAAoB,GAAI,KAAI,QAAQ,GAAR,EAAa,YAArB,CAAkC,GAAI,eAAc,QAAQ,MAAR,EAAgB,EAAlC,CAAqC,GAAI,qBAAoB,CAAC,SAAS,IAAV,CAAe,OAAO,IAAtB,CAAxB,CAAoD;AAC9rB,cAAc,EAAE,QAAF,CAAW,mBAAX,CAA+B,aAA/B,CAAd,CAA4D,MAAO,SAAS,0BAAT,CAAmC,GAAnC,CAAuC,GAAvC,CAA2C,IAA3C,CAAgD,CAAC;AACpH;AACA;AACA,GAAI,iBAAgB,IAAI,MAAxB,CAA+B,GAAG,EAAE,OAAF,CAAU,eAAV,CAAH,CAA8B,CAAC,KAAM,IAAI,MAAJ,CAAU,mDAAmD,oDAA7D,CAAN,CAA0H,IAAI,QAAO,GAAI,OAAJ,CAAW,aAAX,CAAX,CAAqC;AAC7N,GAAG,IAAI,WAAJ,CAAgB,OAAhB,CAAwB,OAAO,IAA/B,IAAuC,CAA1C,CAA4C,CAAC,MAAO,OAAP,CAAe;AAC5D;AACA;AACA,GAAI,oBAAJ,CAAwB,GAAI,cAAJ,CAAkB;AAC1C,GAAI,eAAc,IAAI,OAAJ,CAAY,GAAZ,CAAlB,CAAmC,GAAG,CAAC,EAAE,OAAF,CAAU,aAAV,CAAJ,CAA6B,CAAC,GAAG,CAAC,cAAc,KAAK,KAAL,CAAW,aAAX,CAAd,CAAwC;AAC7G,GAAG,eAAe,CAAC,cAAc,EAA9B,EAAkC,CAAC,cAAc,YAApD,CAAiE,CAAC,KAAK,iBAAL,CAAwB;;WAE9E,OAAM,CAAN,CAAQ,CAAC;AACrB,QAAQ,IAAR,CAAa,8BAAb,EAA8C,CAAC,qBAAoB,aAApB,EAAmC;AAClF;AACA,IAAI,EAAJ,CAAO,QAAP,CAAgB,UAAU,CAAC,GAAI,qBAAoB,4BAAxB,CAAqD;AAChF,GAAG,EAAE,WAAF,CAAc,mBAAd,CAAH,CAAsC,CAAC,OAAO,OAAP,CAAe,GAAI,KAAJ,CAAS,CAAT,CAAf,CAA2B,IAAI,SAAJ,CAAc,YAAd,CAA2B,OAAO,SAAP,CAAiB,GAAjB,CAAqB,EAArB,CAA3B,EAAqD,OAAQ;AAC/H;;;SAGS;AACT,cAAc,mBAAd,CAAkC;AAClC,GAAG,gBAAgB,aAAnB,CAAiC,CAAC,GAAI,KAAI,KAAK,SAAL,CAAe,mBAAf,CAAR,CAA4C,IAAI,OAAO,SAAP,CAAiB,GAAjB,CAAqB,GAArB,CAAJ,CAA8B,IAAI,SAAJ,CAAc,YAAd,CAA2B,GAA3B,EAAgC;AAC5I;AACA;AACC,CAAC,CAVF,EAUI,GAAG,QAAQ,SAAR,EAAmB,CAAC,mBAAmB,MAAM,IAAN,CAAW,OAAX,EAAnB,CAAvB,CAAgE,CAAC,MAAM,IAAN,CAAW,OAAX,GAAqB,KAArB,GAA6B,IAA7B,CAAkC,SAAS,IAAT,CAAc,CAAC,OAAQ,CAAzD,CAA0D,UAAU,CAAC;AAC1I,MAAM,IAAN,CAAW,MAAX,GAAoB,OAAQ,CADyC,EACtC,CAD3B,IAC+B,CAAC,OAAQ,CAAC,CAzBe,CAyBb,CA1B+d,CA0B9d","file":"index-compiled-compiled.js","sourcesContent":["\"use strict\";var _=require(\"underscore\");var Cookie=function Cookie(options){this.path=\"/\";this.maxAge=null;this.httpOnly=true;//if (options) _.merge(this, options);\n};var encode=encodeURIComponent;var decode=decodeURIComponent;Cookie.prototype.serialize=function(key,val){var serialize=function serialize(name,val,opt){opt=opt||{};var enc=opt.encode||encode;var pairs=[name+'='+enc(val)];if(opt.maxAge)pairs.push('Max-Age='+opt.maxAge);if(opt.domain)pairs.push('Domain='+opt.domain);if(opt.path)pairs.push('Path='+opt.path);if(opt.expires)pairs.push('Expires='+opt.expires.toUTCString());if(opt.httpOnly)pairs.push('HttpOnly');if(opt.secure)pairs.push('Secure');return pairs.join('; ');};return serialize(key,val,this);};var setCurrentParseUser=function setCurrentParseUser(userSession){if(!userSession||!userSession.id||!userSession.sessionToken){// Force cleanup if invalid\nParse.User.logOut();return;}Parse.User._currentUser=Parse.Object._create(\"_User\");Parse.User._currentUser._isCurrentUser=true;Parse.User._currentUser.id=userSession.id;Parse.User._currentUser._sessionToken=userSession.sessionToken;Parse.User._currentUser._synchronizeAllAuthData();Parse.User._currentUser._refreshCache();Parse.User._currentUser._opSetQueue=[{}];};var getCurrentParseUserSession=function getCurrentParseUserSession(){var u=Parse.User.current();if(!u){return;}return{id:u.id,sessionToken:u.getSessionToken()};};module.exports=function(options){options=options||{};var key=options.key||'parse.sess';var cookieOptions=options.cookie||{};var forcedCookieOptions={httpOnly:true,secure:true};// forcedCookieOptions will overwrite same keys in cookieOptions\ncookieOptions=_.defaults(forcedCookieOptions,cookieOptions);return function parseExpressCookieSession(req,res,next){////////////////////////\n// Request path logic\n// Expect express.cookieParser to set req.secret before this middleware.\nvar signatureSecret=req.secret;if(_.isEmpty(signatureSecret)){throw new Error('express.cookieParser middleware must be included'+'before this, and initialized with a signing secret');}var cookie=new Cookie(cookieOptions);// Ignore if cookie path does not match.\nif(req.originalUrl.indexOf(cookie.path)!==0){return next();}// Decrypt and parse the signed cookie.\n// Assume express.cookieParser already verified the signature and put the\n// cookie's contents at req.signedCookies[key].\nvar reqParseUserSession;var reqCookieJson;// Used later to determine whether to set response cookie.\nvar reqCookieBody=req.cookies[key];if(!_.isEmpty(reqCookieBody)){try{reqCookieJson=JSON.parse(reqCookieBody);//reqParseUserSession = JSON.parse(reqCookieBody);//decrypt(reqCookieBody, encryptionSecret);\nif(reqCookieJson&&!reqCookieJson.id||!reqCookieJson.sessionToken){throw\"Invalid session\";}/*if (!Parse._.isEmpty(reqCookieJson)) {\n          reqParseUserSession = utils.parseJSONCookie(reqCookieJson);\n        }*/}catch(e){// Catch any decryption and JSON parsing exceptions.\nconsole.warn(\"Invalid Parse session cookie\");}}setCurrentParseUser(reqCookieJson);////////////////////////\n// Response path logic\nres.on('header',function(){var resParseUserSession=getCurrentParseUserSession();// If user is logged out, clear cookie.\nif(_.isUndefined(resParseUserSession)){cookie.expires=new Date(0);res.setHeader('Set-Cookie',cookie.serialize(key,''));return;}// Only send Parse session cookies via https connection.\n/*if (!req.secure) {\n        console.warn('Skipped setting Parse session cookie because request is not https');\n        return;\n      }*/// Serialize. Prefix is Connect's convention for JSON in cookie.\nresCookieJson=resParseUserSession;// Skip Set-Cookie if cookie is same as request.\nif(reqCookieJson!==resCookieJson){var val=JSON.stringify(resParseUserSession);val=cookie.serialize(key,val);res.setHeader('Set-Cookie',val);// Encrypt and sign. Prefix is Connect's convention for signed cookie.\n//var val = encrypt(resCookieJson, encryptionSecret);\n//val = 's:' + signature.sign(val, signatureSecret);\n}});if(options.fetchUser&&!_isNullOrUndefined(Parse.User.current())){Parse.User.current().fetch().then(function(user){next();},function(){// If user from cookie is invalid, reset Parse.User.current() to null.\nParse.User.logOut();next();});}else{next();}};};//# sourceMappingURL=index-compiled.js.map"]}