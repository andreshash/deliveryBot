{"version":3,"sources":["localStore-spec.js"],"names":[],"mappings":"6OAAA,sC,2CACA,2C,yCACA,2C,yDACA,gDACA,gD,mFAGA,SAAS,qBAAT,CAAgC,UAAY,CACxC,GAAG,mBAAH,CAAwB,UAAY,CAChC,GAAM,cAAe,CACjB,SAAU,EADO,CAArB,CAIA,GAAM,SAAU,QAAV,QAAU,EAAkC,IAAjC,MAAiC,+CAAzB,YAAyB,iBAAX,OAAW,cAC9C,GAAI,MAAO,OAAO,IAAlB,CACA,mBAAW,KAAX,EACH,CAHD,CAKA,iCAAiB,OAAjB,EACH,CAXD,EAaA,GAAG,cAAH,CAAmB,UAAY,CAC3B,OAAO,wBAAQ,kBAAR,CAAP,EAAoC,OAApC,CAA4C,EAA5C,EACH,CAFD,EAIA,GAAG,yDAAH,CAA8D,UAAY,CACtE,OAAO,wBAAQ,kBAAR,CAA4B,MAA5B,CAAP,EAA4C,IAA5C,CAAiD,SAAjD,EACH,CAFD,EAIA,GAAG,gCAAH,CAAqC,UAAY,CAC7C,GAAI,aAAc,kBAAlB,CACA,GAAI,UAAW,CACX,WAAY,MADD,CAEX,UAAW,iBAFA,CAGX,OAAQ,OAHG,CAIX,SAAU,CAAC,CAJA,CAKX,OAAQ,MALG,CAAf,CAQA,GAAI,SAAU,mBAAS,2BAAa,QAAb,CAAuB,CAAC,WAAY,WAAb,CAAvB,CAAT,CAAd,CACA,GAAI,OAAQ,MAAM,QAAN,EAAZ,CACA,2BAAa,MAAM,QAAN,CAAe,WAAf,CAAb,CAA0C,CAAC,KAAM,uCAAuB,OAAvB,CAAP,CAA1C,EAEA,OAAO,wBAAQ,kBAAR,CAA4B,MAA5B,CAAP,EAA4C,OAA5C,CAAoD,CAChD,GAAI,SAD4C,CAEhD,WAAY,MAFoC,CAGhD,UAAW,iBAHqC,CAIhD,OAAQ,OAJwC,CAKhD,SAAU,CAAC,CALqC,CAMhD,OAAQ,MANwC,CAOhD,WAAY,kBAPoC,CAQhD,eAAgB,OARgC,CAApD,EASH,CAvBD,EAyBA,GAAG,uCAAH,CAA4C,UAAY,CACpD,GAAI,UAAW,wBAAQ,kBAAR,CAAf,CACA,OAAO,SAAS,cAAT,CAAwB,MAAxB,CAAP,EAAwC,OAAxC,CAAgD,IAAhD,EAEA,GAAI,MAAO,SAAS,IAApB,CACA,OAAO,KAAK,UAAZ,EAAwB,IAAxB,CAA6B,MAA7B,EACA,OAAO,KAAK,SAAZ,EAAuB,IAAvB,CAA4B,iBAA5B,EACA,OAAO,KAAK,MAAZ,EAAoB,IAApB,CAAyB,OAAzB,EACA,OAAO,KAAK,QAAZ,EAAsB,IAAtB,CAA2B,CAAC,CAA5B,EACA,OAAO,KAAK,UAAZ,EAAwB,IAAxB,CAA6B,kBAA7B,EACH,CAVD,EAWH,CA1DD","file":"localStore-spec-compiled.js","sourcesContent":["import Parse from '../../lib/parse'\nimport User from '../../lib/models/User'\nimport objectAssign from 'object-assign';\nimport {createLocalStore, getData} from '../../lib/localStore'\nimport { extractParseAttributes } from '../../lib/parseUtils';\n\n\ndescribe(\"LocalStore creation\", function () {\n    it(\"create localStore\", function () {\n        const initialState = {\n            userData: { }\n        }\n\n        const reducer = (state = initialState, action) => {\n            let data = action.data;\n            return {...state};\n        }\n\n        createLocalStore(reducer);\n    });\n\n    it(\"get userData\", function () {\n        expect(getData('1100195690052041')).toEqual({})\n    })\n\n    it(\"deberia retornar indefinido cuando el usuario no existe\", function () {\n        expect(getData('1100195690052041', 'user')).toBe(undefined)\n    })\n\n    it(\"test getData user and property\", function () {\n        let recipientId = '1100195690052041'\n        let userData = {\n            first_name: 'John',\n            last_name: 'Garavito Suárez',\n            locale: 'en_US',\n            timezone: -5,\n            gender: 'male'\n        };\n\n        let userTmp = new User(objectAssign(userData, {facebookId: recipientId}));\n        let state = store.getState();\n        objectAssign(state.userData[recipientId], {user: extractParseAttributes(userTmp)});\n\n        expect(getData('1100195690052041', 'user')).toEqual({\n            id: undefined,\n            first_name: 'John',\n            last_name: 'Garavito Suárez',\n            locale: 'en_US',\n            timezone: -5,\n            gender: 'male',\n            facebookId: '1100195690052041',\n            rawParseObject: userTmp })\n    })\n\n    it(\"test getData user with all properties\", function () {\n        let userData = getData('1100195690052041');\n        expect(userData.hasOwnProperty('user')).toEqual(true);\n\n        let user = userData.user;\n        expect(user.first_name).toBe('John');\n        expect(user.last_name).toBe('Garavito Suárez');\n        expect(user.locale).toBe('en_US');\n        expect(user.timezone).toBe(-5);\n        expect(user.facebookId).toBe('1100195690052041');\n    })\n});\n"]}