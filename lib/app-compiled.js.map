{"version":3,"sources":["app.js"],"names":[],"mappings":"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","file":"app-compiled.js","sourcesContent":["import * as _ from 'underscore';\nimport * as bot from './bot';\nimport * as types from './constants/actionTypes';\nimport * as Actions from './actions/index';\nimport * as ParseModels from './models/ParseModels';\nimport { extractParseAttributes } from './ParseUtils';\nimport { createStore, applyMiddleware } from 'redux';\n\nimport utils from './utils';\nimport config from 'config';\nimport request from 'request';\nimport HashMap  from 'hashmap';\nimport objectAssign from 'object-assign';\nimport thunk from 'redux-thunk';\nimport FB from 'fb';\nimport geocoder from 'geocoder';\nimport path from 'path';\n\nconst APP_SECRET = (process.env.MESSENGER_APP_SECRET) ? process.env.MESSENGER_APP_SECRET : config.get('APP_SECRET');\n\nconst PAGE_ACCESS_TOKEN = (process.env.MESSENGER_PAGE_ACCESS_TOKEN) ? (process.env.MESSENGER_PAGE_ACCESS_TOKEN) : config.get('PAGE_ACCESS_TOKEN');\n\nconst SERVER_URL = (process.env.SERVER_URL) ? (process.env.SERVER_URL) : config.get('SERVER_URL');\n\nconst PARSE_APP_ID = (process.env.PARSE_APP_ID) ? (process.env.PARSE_APP_ID) : config.get('PARSE_APP_ID');\n\nconst PARSE_SERVER_URL = (process.env.PARSE_SERVER_URL) ? (process.env.PARSE_SERVER_URL) : config.get('PARSE_SERVER_URL');\n\nconst PARSE_CLIENT_KEY = (process.env.PARSE_CLIENT_KEY) ? (process.env.PARSE_CLIENT_KEY) : config.get('PARSE_CLIENT_KEY');\n\nconst FACEBOOK_APP_ID = (process.env.FACEBOOK_APP_ID) ? (process.env.FACEBOOK_APP_ID) : config.get('FACEBOOK_APP_ID');\n\nconst REDIRECT_URI = (process.env.REDIRECT_URI) ? (process.env.REDIRECT_URI) : config.get('REDIRECT_URI');\n\nconst BUSINESS_ID = (process.env.BUSINESS_ID) ? (process.env.BUSINESS_ID) : config.get('BUSINESS_ID');\n\nconst GOOGLE_MAPS_URL = (process.env.GOOGLE_MAPS_URL) ? (process.env.GOOGLE_MAPS_URL) : config.get('GOOGLE_MAPS_URL');\n\nconst GOOGLE_MAPS_KEY = (process.env.GOOGLE_MAPS_KEY) ? (process.env.GOOGLE_MAPS_KEY) : config.get('GOOGLE_MAPS_KEY');\n\nconst FIREBASE_URL = (process.env.FIREBASE_URL) ? (process.env.FIREBASE_URL) : config.get('FIREBASE_URL');\n\nFB.options({\n    appId:          FACEBOOK_APP_ID,\n    appSecret:      APP_SECRET,\n    redirectUri:    REDIRECT_URI\n});\n\nbot.rules.set('hola', sendMenu);\nbot.rules.set('iniciar', sendMenu);\nbot.rules.set('empezar', sendMenu);\nbot.rules.set('comenzar', sendMenu);\nbot.rules.set('buenos dias', sendMenu);\nbot.rules.set('buenas tardes', sendMenu);\nbot.rules.set('pedir domicilio', sendAddresses);\nbot.rules.set('carrito', sendCart);\nbot.rules.set('cuenta', sendCart);\n\nbot.payloadRules.set('Greeting', sendMenu);\n\nbot.payloadRules.set('SendAddresses', sendAddresses);\nbot.payloadRules.set('NewAddress', newAddress);\nbot.payloadRules.set('SetAddressComplement', setAddressComplement);\nbot.payloadRules.set('ConfirmAddress', confirmAddress);\nbot.payloadRules.set('SetAddress', setAddress);\n\nbot.payloadRules.set('SendCategories', sendCategories);\nbot.payloadRules.set('SendProducts', sendProducts);\nbot.payloadRules.set('AddProduct', addProduct);\nbot.payloadRules.set('RemoveProduct', removeProduct);\nbot.payloadRules.set('IncreaseOneProduct', increaseOneProduct);\nbot.payloadRules.set('DecreaseOneProduct', decreaseOneProduct);\n\nbot.payloadRules.set('Search', searchProducts);\nbot.payloadRules.set('SendCart', sendCart);\nbot.payloadRules.set('SendCartDetails', sendCartDetails);\nbot.payloadRules.set('EditCart', editCart);\nbot.payloadRules.set('ClearCart', clearCart);\nbot.payloadRules.set('SendPurchaseOptions', sendPurchaseOptions);\n\nbot.payloadRules.set('Checkout', checkout);\nbot.payloadRules.set('CheckPayment', checkPayment);\nbot.payloadRules.set('CheckAddress', checkAddress);\nbot.payloadRules.set('CheckOrder', checkOrder);\nbot.payloadRules.set('RegisterCreditCard', registerCreditCard);\nbot.payloadRules.set('SendRegisteredCreditCards', sendRegisteredCreditCards);\nbot.payloadRules.set('CancelRegisterCreditCard', cancelRegisterCreditCard);\nbot.payloadRules.set('PayWithCreditCard', payWithCreditCard);\nbot.payloadRules.set('SendOrders', sendOrders)\nbot.payloadRules.set('NewOrder', newOrder);\nbot.payloadRules.set('SetScore', setScore);\nbot.payloadRules.set('Help', sendHelp);\n\nbot.defaultSearch = searchProducts;\n\nconst initialState = {\n    userData: {},\n\n\n    geocodedLocation: {lat: -1, lng: -1},\n    addresses: [],\n    mapBounds: {},\n    mapAddress: '',\n    useSubCategories: false,\n    products: [],\n    pointOfSales: [],\n    categories: [],\n    paymentMethods: [],\n    consumer: {},\n    customer: {},\n    orders: { ongoing: [], delivered: [] },\n    orderToRate: null,\n    currentOrder: {\n        consumerAddress:{},\n        items: []\n    },\n    locationZoom: 3,\n    profileIsOpen: false,\n    mapAddressIsOpen: false,\n    addressFormIsOpen: false,\n    addressListIsOpen: false,\n    savingAddress: false,\n    creatingOrder: false,\n    paymentMethodNotSelected: false,\n    cartTotalIsBelowMinimumPrice: false,\n    currentCategory: {},\n    consumerNotFound: false,\n    updatingConsumer: false,\n    currentUser: {},\n    pendingOrder: false\n};\n\nconst reducer = (state = initialState, action) => {\n    console.log('ACTION');\n    console.log(action);\n    var data = action.data;\n\n    if(data && data.hasOwnProperty('recipientId')){\n        if(typeof state.userData[data.recipientId] != 'object'){\n            state.userData[data.recipientId] = {};\n        }\n    }\n\n    switch (action.type) {\n        case types.APP_LOADED:\n            console.log('Application is running on port', bot.app.get('port'));\n            return {...state};\n\n        case types.CUSTOMER_LOADED:\n            let customer = extractParseAttributes(data.customer);\n\n            if(typeof state.userData[data.recipientId] != 'object'){\n                state.userData[data.recipientId] = {};\n            }\n            objectAssign(state.userData[data.recipientId], {customer});\n            return {...state};\n\n        case types.CONSUMER_LOADED:\n            //if (state.consumerNotFound) delete state.consumerNotFound;\n            var consumer = extractParseAttributes(data.consumer);\n            objectAssign(state.userData[data.recipientId], {consumer});\n            return {...state};\n\n        case types.USER_LOADED:\n            var user = extractParseAttributes(data.user);\n            objectAssign(state.userData[data.recipientId], {user});\n            return {...state};\n\n        case types.CONSUMER_ADDRESSES_LOADED:\n            let addresses = data.addresses.map(a => extractParseAttributes(a));\n            objectAssign(state.userData[data.recipientId], {addresses});\n            return {...state};\n\n        case types.SET_CURRENT_ADDRESS:\n            let address = extractParseAttributes(data.address);\n            objectAssign(state.userData[data.recipientId], {address});\n            return {...state};\n\n        case types.PAYMENT_METHODS_LOADED:\n            console.log('PAYMENT_METHODS_LOADED');\n            console.log(data.paymentMethods);\n            let paymentMethods = data.paymentMethods.map(p => extractParseAttributes(p))\n            objectAssign(state.userData[data.recipientId], {paymentMethods})\n            return {...state};\n        \n        case types.SET_PAYMENT_METHOD:\n            let paymentMethod = extractParseAttributes(data.paymentMethod);\n            objectAssign(state.userData[data.recipientId], {paymentMethod});\n            return {...state};\n            \n        case types.CONSUMER_UPDATED:\n            return {...state};\n\n        case types.CONSUMER_NOT_FOUND:\n            objectAssign(state, {\n                consumerNotFound: true,\n                currentUser: action.data.user\n            })\n            return {...state};\n\n        case types.CONSUMER_ORDERS_LOADED:\n            let orders = data.orders.map(a => extractParseAttributes(a));\n            objectAssign(state.userData[data.recipientId], {orders});\n            return {...state};\n            /*let ongoing = orders['ongoing'].map(o => extractParseAttributes(o))\n            let delivered = orders['delivered'].map(o => extractParseAttributes(o))\n            let orderToRate = delivered[0]\n            objectAssign(state, {\n                orders: {ongoing, delivered},\n                orderToRate\n            })*/\n            return {...state};\n\n        case types.USER_CREDITCARDS_LOADED:\n            let creditCards = data.creditCards.map(a => extractParseAttributes(a));\n            objectAssign(state.userData[data.recipientId], {creditCards});\n            return {...state};\n\n        case types.SET_CUSTOMER_POINT_SALE:\n            let pointSale = extractParseAttributes(data.pointSale);\n            objectAssign(state.userData[data.recipientId], {pointSale});\n            return {...state};\n\n        case types.SET_ORDER:\n            let order = extractParseAttributes(data.order);\n            objectAssign(state.userData[data.recipientId], {order});\n            return {...state};\n\n        case types.SET_USER:\n            let user = extractParseAttributes(data.user);\n            objectAssign(state.userData[data.recipientId], {user});\n            return {...state};\n\n        case types.SET_CONSUMER:\n            let consumer = extractParseAttributes(data.consumer);\n            objectAssign(state.userData[data.recipientId], {consumer});\n            return {...state};\n\n        case types.SET_ORDER_STATE:\n            let orderState = extractParseAttributes(data.orderState);\n            objectAssign(state.userData[data.recipientId], {orderState});\n            return {...state};\n\n        case types.RENDER_MENU:\n            /*\n            console.log('Store');\n            console.log('Consumer');\n            console.log(consumer);*/\n            renderMenu()\n\n            /*request({\n             uri: 'https://graph.facebook.com/v2.6/' + '1100195690052041',\n             qs: {access_token: PAGE_ACCESS_TOKEN, fields: 'first_name,last_name,locale,timezone,gender'},\n             method: 'GET'\n             }, renderMenuMessage);*/\n            return state;\n\n        case  types.RENDER_ADDRESS_MENU:\n            renderAddress();\n            return state;\n\n        default:\n            return state;\n    }\n}\n\nconst store = createStore(reducer, applyMiddleware(thunk));\n\nstore.subscribe(() =>\n    console.log('\\n')\n);\n\n//global.FB = FB;\n\nfunction getData(recipientId, property){\n    if(recipientId !== undefined){\n        var data = store.getState().userData;\n        var userData = data[recipientId];\n\n        if(userData == undefined){\n            data[recipientId] = {};\n            userData = data[recipientId];\n        }\n\n        if(property == undefined)\n            return userData;\n        else{\n            if(userData.hasOwnProperty(property)){\n                return userData[property];\n            }\n            else\n                return undefined;\n        }\n    }\n}\n\nfunction authentication(recipientId, callback){\n    //console.log(recipientId);\n\n    new Parse.Query(ParseModels.User).equalTo('facebookId', recipientId).first().then(user => {\n        if(user){\n            if(callback){\n                callback(user)\n            }\n        }else{\n            bot.getFacebookUser(recipientId, (userData) => {\n                signUp(recipientId, userData, callback);\n            });\n        }\n    },\n    (object, error) => {\n        console.log(error);\n    })\n}\n\nfunction signUp(facebookId, userData, callback){    //1100195690052041\n    if(userData){\n        var facebookUser = new ParseModels.User();\n\n        facebookUser.signUp(Object.assign(userData, {username: facebookId.toString(), password: facebookId.toString(), facebookId: facebookId})).then(\n            user => {\n                console.log('success sign up of User');\n                var consumer = new ParseModels.Consumer();\n                consumer.set('name', user.get('first_name')+\" \"+user.get('last_name'));\n                consumer.set('user', {\n                    __type: \"Pointer\",\n                    className: \"_User\",\n                    objectId: user.id\n                });\n                consumer.save(undefined, {\n                    success: function(consumer) {\n                        //sendRegisterFacebookUser(facebookId);\n                        callback(facebookId, user);\n                    },\n                    error: function(user, error) {\n                        // Execute any logic that should take place if the save fails.\n                        // error is a Parse.Error with an error code and message.\n                        console.log('Failed to create new object, with error code: ' + error.message);\n                    }\n                });\n            },\n            error => {\n                // Execute any logic that should take place if the save fails.\n                // error is a Parse.Error with an error code and message.\n                console.log('Failed to create new object, with error code: ' + error.message);\n            }\n        );\n    }\n}\n\nfunction sendMenu(recipientId) {\n    bot.sendTypingOn(recipientId);\n    var user = getData(recipientId, 'user');\n    var consumer = getData(recipientId, 'consumer');\n\n    if(typeof user == 'undefined'){\n        /*loadUser(recipientId).then((_user)=>{\n            console.log(_user)\n        });*/\n        user = new ParseModels.User({recipientId});\n    }\n    else{\n        user = user.rawParseObject\n    }\n\n    user.registered().then(user_registered => {\n        if (typeof user_registered != 'undefined') {\n            user_registered.saveInStore(store).then(()=> {\n                loadMenuData(recipientId);\n            })\n        }\n        else {\n            bot.getFacebookUser(recipientId).then(data => {\n                user.signUpWithFacebook(data).then(() => {\n                    var username = user.get('username');\n                    Parse.User.logIn(username, username, {\n                        success : _user => {\n                            console.log(_user)\n                            console.log(_user.authenticated())\n                            console.log(_user.getSessionToken())\n                            user.saveInStore(store).then(() => {\n                                createConsumer(user).then(consumer => {\n                                    consumer.saveInStore(store).then(()=> {\n                                        loadMenuData(recipientId);\n                                    });\n                                });\n                            });\n                        },\n                        error: function(user, error) {\n                            // An error occurred.\n                        }});\n                });\n            });\n        }\n    });\n}\n\nfunction createConsumer(user){\n    var consumer = new ParseModels.Consumer();\n    consumer.setUser(user);\n    return consumer.save().fail(error => {\n        console.log('Error code: ' + error.message);\n    });\n}\n\nfunction loadUser(recipientId){\n    return store.dispatch(Actions.loadUser(recipientId))\n}\n\nfunction loadMenuData(recipientId){\n    var user = getData(recipientId, 'user');\n\n    store.dispatch(Actions.loadCustomer(recipientId, BUSINESS_ID)).then(() => {\n        store.dispatch(Actions.loadConsumer(recipientId, user.rawParseObject)).then(() => {\n            renderMenu(recipientId);\n        });\n    });\n}\n\nfunction renderMenu(recipientId) {\n    var customer = getData(recipientId, 'customer');\n    var consumer = getData(recipientId, 'consumer');\n\n    var image_url = customer.image.url;\n    var messageData = {\n        recipient: {\n            id: recipientId\n        },\n        message: {\n            attachment: {\n                type: \"template\",\n                payload: {\n                    template_type: \"generic\",\n                    //text: \"Buenos dias, para conocer nuestros menus del dia, por favor escoja una opción:\",\n                    elements: [{\n                        \"title\":     \"Hola \"+consumer.name+\", Bienvenido a \"+customer.name,\n                        \"subtitle\":  \"Aquí puedes pedir un domicilio, escribe o selecciona alguna de las opciones:\",\n                        \"image_url\": image_url,\n                        \"buttons\":[\n                            {\n                                \"type\":\"postback\",\n                                \"title\":\"Pedir domicilio\",\n                                \"payload\": \"SendAddresses\"\n                            },\n                            {\n                                \"type\":\"postback\",\n                                \"title\":\"Pedir para recoger\",\n                                \"payload\": \"TakeOut\"\n                            },\n                            {\n                                \"type\":\"postback\",\n                                \"title\":\"Servicio al cliente\",\n                                \"payload\": \"CustomerService\"\n                            }\n                        ]\n                    }]\n                }\n            }\n        }\n    };\n\n    bot.sendTypingOff(recipientId);\n    bot.callSendAPI(messageData);\n}\n\nfunction sendAddresses(recipientId){\n    bot.sendTypingOn(recipientId);\n    var user = getData(recipientId, 'user');\n    var consumer = getData(recipientId, 'consumer');\n\n    if(typeof consumer == 'undefined'){\n        store.dispatch(Actions.loadCustomer(recipientId, BUSINESS_ID)).then(\n            () => {\n                authentication(recipientId, user => {\n                    if(user){\n                        store.dispatch(Actions.loadConsumer(recipientId, user)).then(\n                            () => {\n                                consumer = getData(recipientId, 'consumer');\n                                store.dispatch(Actions.loadConsumerAddresses(recipientId, consumer.rawParseObject)).then(\n                                    () => {\n                                        renderAddress(recipientId);\n                                    }\n                                );\n                            }\n                        );\n                    }\n                });\n            }\n        )\n    }\n    else{\n        store.dispatch(Actions.loadConsumerAddresses(recipientId, consumer.rawParseObject)).then(\n            () => {\n                renderAddress(recipientId);\n            }\n        );\n    }\n}\n\nfunction renderAddress(recipientId){\n\n    var addresses = getData(recipientId, 'addresses');\n    var elements = [];\n\n    //\"title\": \"A cual dirección vas hacer tu pedido?\",\n    //\"subtitle\": \"Puedes escoger entre tus direcciones guardadas o agregar una nueva dirección\",\n    renderAddressTitle(recipientId, () => {\n        elements.push({\n            \"title\": \"Nueva dirección\",\n            \"subtitle\": \"Puedes agregar una nueva dirección\",\n            \"image_url\": SERVER_URL+\"assets/new_address_blue.jpg\",\n            \"buttons\": [\n                {\n                    \"type\": \"postback\",\n                    \"title\": \"Nueva dirección\",\n                    \"payload\": \"NewAddress\"\n                }\n            ]\n        });\n\n        for(var address of addresses) {\n            if (elements.length < bot.limit){\n                elements.push({\n                    \"title\": address.name.capitalizeFirstLetter(),\n                    \"subtitle\": address.address +\", \"+address.description+\", \"+address.city+\", \"+address.state,\n                    \"image_url\": GOOGLE_MAPS_URL+ \"?center=\"+address.location.lat+\",\"+address.location.lng+\"&zoom=16&size=400x400&markers=color:red%7C\"+address.location.lat+\",\"+address.location.lng+\"&key=\"+GOOGLE_MAPS_KEY,\n                    \"buttons\": [\n                        {\n                            \"type\": \"postback\",\n                            \"title\": address.name.capitalizeFirstLetter(),\n                            \"payload\": \"SetAddress-\"+address.objectId\n                        }\n                    ]\n                });\n            }\n        }\n\n        var messageData = {\n            recipient: {\n                id: recipientId\n            },\n            message: {\n                \"attachment\":{\n                    \"type\": \"template\",\n                    \"payload\":{\n                        \"template_type\": \"generic\",\n                        \"elements\": elements\n                    }\n                }\n            }\n        };\n\n        bot.sendTypingOff(recipientId);\n        bot.callSendAPI(messageData);\n    });\n}\n\nfunction renderAddressTitle(recipientId, callback){\n    var messageData = {\n        recipient: {\n            id: recipientId\n        },\n        message: {\n            \"text\": \"A cual dirección vas hacer tu pedido?\\n\\nPuedes escoger entre agregar una nueva dirección o seleccionar una de tus direcciones guardadas\"\n        }\n    };\n    bot.sendTypingOff(recipientId);\n    bot.callSendAPI(messageData, callback);\n}\n\nfunction newAddress(recipientId){\n    bot.sendTypingOff(recipientId);\n    var messageData = {\n        recipient: {\n            id: recipientId\n        },\n        message: {\n            \"text\": \"Puedes escribir o compartir tu ubicación actual?\\n\\nEjemplo: Calle 67 #52-20, Medellín\",\n            \"quick_replies\":[\n                {\n                    \"content_type\": \"location\"\n                }\n            ]\n        }\n    };\n\n    bot.setListener(recipientId, 'address', 'text', addressCheck);\n    bot.setListener(recipientId, 'location', 'attachment', setLocationCheck);\n\n    bot.callSendAPI(messageData);\n}\n\nfunction setAddressComplement(recipientId){\n    bot.sendTypingOff(recipientId);\n    var messageData = {\n        recipient: {\n            id: recipientId\n        },\n        message: {\n            \"text\": \"Por favor escribe el complemento de tu dirección actual. \\n\\nEjemplo: Oficina 1068\"\n        }\n    };\n    bot.setListener(recipientId, 'complement', 'text', confirmAddress);\n    bot.callSendAPI(messageData);\n}\n\nfunction renderMapMessage(recipientId, callback){\n    var userBuffer = bot.buffer[recipientId];\n    var messageData = {\n        recipient: {\n            id: recipientId\n        },\n        \"message\": {\n            \"text\": \"Encontré esta dirección en Google Maps:\\n\\n\"+userBuffer.address+\"\"\n        }\n    };\n\n    bot.sendTypingOff(recipientId);\n    bot.callSendAPI(messageData, callback);\n}\n\nfunction renderMap(recipientId, callback){\n    bot.sendTypingOff(recipientId);\n    var userBuffer = bot.buffer[recipientId];\n    var messageData = {\n        recipient: {\n            id: recipientId\n        },\n        \"message\": {\n            \"attachment\": {\n                \"type\": \"image\",\n                \"payload\": {\n                    \"url\": GOOGLE_MAPS_URL+\"?center=\"+userBuffer.location.lat+\",\"+userBuffer.location.lng+\"&zoom=16&size=400x400&markers=color:red%7C\"+userBuffer.location.lat+\",\"+userBuffer.location.lng+\"&key=\"+GOOGLE_MAPS_KEY\n                }\n            }\n        }\n    };\n\n    bot.callSendAPI(messageData, callback);\n}\n\nfunction addressCheck(recipientId){\n    let userBuffer = bot.buffer[recipientId];\n    \n    geocoder.geocode(userBuffer.address, (error, data) =>{\n        if(!error && data.status == 'OK'){\n            let result = data.results[0];\n\n            userBuffer.address = result.formatted_address;\n            userBuffer.location = result.geometry.location;\n\n            for(var component of result.address_components){\n                if(component.types.includes('route')){\n                    userBuffer.route = component.long_name;\n                }\n                else if(component.types.includes('street_number')){\n                    userBuffer.street_number = component.short_name;\n                }\n                else if(component.types.includes('locality')){\n                    userBuffer.locality = component.short_name;\n                }\n                else if(component.types.includes('administrative_area_level_1')){\n                    userBuffer.state = component.short_name;\n                }\n                else if(component.types.includes('administrative_area_level_2')){\n                    userBuffer.administrative_area = component.short_name;\n                }\n                else if(component.types.includes('country')){\n                    userBuffer.country = component.long_name;\n                    userBuffer.country_code = component.short_name\n                }\n                else if(component.types.includes('postal_code')){\n                    userBuffer.postal_code = component.short_name;\n                }\n            }\n\n            renderMapMessage(recipientId, () => {\n                renderMap(recipientId, () => {\n                    var messageData = {\n                        recipient: {\n                            id: recipientId\n                        },\n                        message: {\n                            \"text\": \"Es correcta?\",\n                            \"quick_replies\":[\n                                {\n                                    \"content_type\": \"text\",\n                                    \"title\": \"Si\",\n                                    \"payload\": \"SetAddressComplement\"\n                                },\n                                {\n                                    \"content_type\": \"text\",\n                                    \"title\": \"No\",\n                                    \"payload\": \"NewAddress\"\n                                }\n                            ]\n                        }\n                    };\n                    bot.sendTypingOff(recipientId);\n                    bot.callSendAPI(messageData);\n                });\n            });\n        }\n        else{\n            console.log('Geocode not found');\n            console.log(error);\n        }\n\n    });\n}\n\nfunction writeAddressComplete(recipientId){\n    let consumer = getData(recipientId, 'consumer');\n    let userBuffer = bot.buffer[recipientId];\n\n    console.log(userBuffer);\n\n    var location = new Parse.GeoPoint({latitude: parseFloat(userBuffer.location.lat), longitude: parseFloat(userBuffer.location.lng)});\n\n    var consumerAddress = new ParseModels.ConsumerAddress();\n    consumerAddress.set('name', userBuffer['address-name']);\n    consumerAddress.set('address', userBuffer.route+\" # \"+userBuffer.street_number);\n    consumerAddress.set('consumer', {\n        __type: \"Pointer\",\n        className: \"Consumer\",\n        objectId: consumer.objectId\n    });\n    consumerAddress.set('location', location);\n    consumerAddress.set('city', userBuffer.locality);\n    consumerAddress.set('country', userBuffer.country);\n    consumerAddress.set('countryCode', userBuffer.country_code);\n    consumerAddress.set('postalCode', userBuffer.postal_code);\n    consumerAddress.set('state', userBuffer.state);\n    consumerAddress.set('description', userBuffer.complement);\n\n    consumerAddress.save(undefined, {\n        success: function(result) {\n\n            delete userBuffer.address;\n            delete userBuffer.location;\n            delete userBuffer.complement;\n            delete userBuffer['address-name'];\n\n            var messageData = {\n                recipient: {\n                    id: recipientId\n                },\n                message: {\n                    \"text\": \"La dirección ha sido almacenada.\"\n                }\n            };\n\n            bot.sendTypingOff(recipientId);\n            bot.callSendAPI(messageData, () => {\n                setAddress(recipientId, result.id)\n            });\n        },\n        error: function(user, error) {\n            // Execute any logic that should take place if the save fails.\n            // error is a Parse.Error with an error code and message.\n            console.log('Failed to create new object, with error code: ' + error.message);\n        }\n    });\n}\n\nfunction confirmAddress(recipientId){\n    var messageData = {\n        recipient: {\n            id: recipientId\n        },\n        message: {\n            \"text\": \"Por favor coloca un nombre a esta dirección para guardarla. \\n\\nEjemplo: casa, apartamento o oficina\"\n        }\n    };\n    bot.setListener(recipientId, 'address-name', 'text', writeAddressComplete);\n    bot.sendTypingOff(recipientId);\n    bot.callSendAPI(messageData);\n}\n\nfunction setEmail(recipientId){\n    var messageData = {\n        recipient: {\n            id: recipientId\n        },\n        message: {\n            \"text\": \"Por favor escribe tu email:\"\n        }\n    };\n    bot.setListener(recipientId, 'email', 'text', setEmailCheck);\n    bot.sendTypingOff(recipientId);\n    bot.callSendAPI(messageData);\n}\n\nfunction setEmailCheck(recipientId){\n\n}\n\nfunction setTelephone(recipientId){\n    var messageData = {\n        recipient: {\n            id: recipientId\n        },\n        message: {\n            \"text\": \"Por favor escribe tu número telefónico:\"\n        }\n    };\n    bot.setListener(recipientId, 'telephone', 'text', setTelephoneCheck);\n    bot.sendTypingOff(recipientId);\n    bot.callSendAPI(messageData);\n}\n\nfunction setTelephoneCheck(recipientId){\n\n}\n\nfunction setLocationCheck(recipientId){\n    let userBuffer = bot.buffer[recipientId];\n\n    geocoder.reverseGeocode( userBuffer.location.lat, userBuffer.location.lng, (error, data) =>{\n        if(!error && data.status == 'OK'){\n            let result = data.results[0];\n\n            userBuffer.address = result.formatted_address;\n            userBuffer.location = result.geometry.location;\n\n            for(var component of result.address_components){\n                //console.log(component);\n                if(component.types.includes('locality')){\n                    userBuffer.locality = component.short_name;\n                }\n                else if(component.types.includes('administrative_area_level_1')){\n                    userBuffer.state = component.short_name;\n                }\n                else if(component.types.includes('administrative_area_level_2')){\n                    userBuffer.administrative_area = component.short_name;\n                }\n                else if(component.types.includes('country')){\n                    userBuffer.country = component.short_name;\n                }\n                else if(component.types.includes('postal_code')){\n                    userBuffer.postal_code = component.short_name;\n                }\n            }\n\n            renderMapMessage(recipientId, () => {\n                renderMap(recipientId, () => {\n                    var messageData = {\n                        recipient: {\n                            id: recipientId\n                        },\n                        message: {\n                            \"text\": \"Es correcta?\",\n                            \"quick_replies\":[\n                                {\n                                    \"content_type\": \"text\",\n                                    \"title\": \"Si\",\n                                    \"payload\": \"ConfirmAddress\"\n                                },\n                                {\n                                    \"content_type\": \"text\",\n                                    \"title\": \"No\",\n                                    \"payload\": \"newAddress\"\n                                }\n                            ]\n                        }\n                    };\n                    bot.sendTypingOff(recipientId);\n                    bot.callSendAPI(messageData);\n                });\n            });\n        }\n        else{\n            console.log('Geocode not found');\n        }\n    });\n}\n\nfunction setAddress(recipientId, id){\n    bot.sendTypingOn(recipientId);\n\n    store.dispatch(Actions.setAddress(recipientId, id)).then(() => {\n            let address = getData(recipientId, 'address');\n\n            Parse.Cloud.run('getProducts', { businessId: BUSINESS_ID, lat: address.location.lat, lng: address.location.lng}).then(\n                function(result){\n                    var pointSale = result.pointSale;\n\n                    store.dispatch(Actions.setCustomerPointSale(recipientId, pointSale.id)).then(\n                        () => {\n                            renderAddressConfirmation(recipientId)\n                        });\n                },\n                function(error) {\n                    if(error.code == '141'){\n                        renderAddressOutOfCoverage(recipientId);\n                    }\n                    else{\n                        console.log('error');\n                        console.log(error);\n                    }\n                });\n            /*\n            Parse.Cloud.run('getProducts', { businessId: BUSINESS_ID }).then(\n                function(result){\n                    var pointSale = result.pointSale\n                    console.log('\\nPoint Sale');\n                    console.log(pointSale);\n\n                    Parse.Cloud.run('isInsideCoverage', {lat: address.location.lat, lng: address.location.lng, pointSale: pointSale.id } ).then(\n                        function(result){\n                            console.log(result);\n                        },\n                        function(error) {\n                            console.log('error');\n                            console.log(error);\n                        });\n                },\n                function(error) {\n                    console.log('error');\n                    console.log(error);\n                });\n                */\n        }\n    );\n}\n\nfunction renderAddressOutOfCoverage(recipientId){\n    var messageData = {\n        recipient: {\n            id: recipientId\n        },\n        message: {\n            \"text\": \"La dirección seleccionada no está dentro de la cobertura de nuestras sedes, por favor intenta con otra dirección\"\n        }\n    };\n    bot.sendTypingOff(recipientId);\n    bot.callSendAPI(messageData, sendAddresses);\n}\n\nfunction renderAddressConfirmation(recipientId){\n    var messageData = {\n        recipient: {\n            id: recipientId\n        },\n        message: {\n            \"text\": \"Perfecto, ya seleccioné tu dirección para este pedido\" //Perfecto, ya guardé tu dirección para próximos pedidos\n        }\n    };\n    bot.sendTypingOff(recipientId);\n    bot.callSendAPI(messageData, sendCategories);\n}\n\nfunction renderCategoriesInitialMessage(recipientId){\n    var messageData = {\n        recipient: {\n            id: recipientId\n        },\n        message: {\n            \"text\": \"A continuación te presentamos las categorías de productos disponibles.\"\n        }\n    };\n    bot.sendTypingOff(recipientId);\n    bot.callSendAPI(messageData);\n}\n\nfunction sendCategories(recipientId, index){\n    bot.sendTypingOn(recipientId);\n\n    if(index == undefined)\n        index = 0;\n    else if( typeof index == 'string')\n        index = parseInt(index);\n\n    if(index == 0){\n        renderCategoriesInitialMessage(recipientId)\n        bot.sendTypingOn(recipientId);\n    }\n\n    Parse.Cloud.run('getProducts', { businessId: BUSINESS_ID }).then(\n        function(result){\n            var elements = splitCategories(recipientId, result.categories, index);\n            var idx = Object.keys(result.categories).length;\n            var buttons = [];\n            var catIni = (index+1)*bot.limit;\n            var catFin =  (idx > catIni+bot.limit) ? catIni+bot.limit : idx;\n            /*\n            console.log('length: '+idx);\n            console.log('catIni: '+catIni);\n            console.log('catFin: '+catFin);\n            console.log('limitsearchProducts: '+(index+1)*bot.limit);\n            */\n            if(idx > (index+1)*bot.limit){\n                buttons.push({\n                    type: \"postback\",\n                    title: \"Categorías \"+(catIni+1)+\"-\"+catFin,\n                    payload: \"SendCategories-\"+(index+1),\n                });\n\n                elements.push({\n                    title: \"Ver más categorias \",\n                    subtitle: \"Categorías disponibles\",\n                    buttons: buttons\n                });\n            }\n\n            var messageData = {\n                recipient: {\n                    id: recipientId\n                },\n                message: {\n                    attachment: {\n                        type: \"template\",\n                        payload: {\n                            template_type: \"generic\",\n                            elements: elements\n                        }\n                    }\n                }\n            };\n\n            bot.sendTypingOff(recipientId);\n            bot.callSendAPI(messageData);\n        },\n        function(error) {\n            console.log('error');\n            console.log(error);\n        });\n}\n\nfunction splitCategories(recipientId, categories, index){\n    var customer = getData(recipientId, 'customer');\n    var image_url = customer.image.url;\n\n    var idx = 0;\n    var elements = [];\n\n    categories.forEach(function(item){\n        if(item && item.get('name')){\n            if(idx >= (index)*bot.limit && idx < (index+1)*bot.limit){\n                var image = item.get('image');\n                if(image){\n                    image_url = image.url();\n                }\n                elements.push({\n                    title: item.get('name'),\n                    //subtitle: item.get('name'),\n                    //item_url: \"http://www.mycolombianrecipes.com/fruit-cocktail-salpicon-de-frutas\",\n                    image_url: image_url,\n                    buttons: [{\n                        type: \"postback\",\n                        title: item.get('name'),\n                        payload: \"SendProducts-\"+item.id+\"-\"+index,\n                    }]\n                })\n            }\n            idx = idx+1;\n        }\n    });\n    return elements;\n}\n\nfunction renderProductsInitialMessage(recipientId, categoryId){\n    return new Parse.Query(ParseModels.Category).get(categoryId).then(\n        category => {\n            var messageData = {\n                recipient: {\n                    id: recipientId\n                },\n                message: {\n                    text: category.get('name')+\":\"\n                }\n            };\n            bot.sendTypingOff(recipientId);\n            bot.callSendAPI(messageData);\n        },\n        (object, error) => {\n            console.log(error);\n            // error is an instance of Parse.Error.\n        }\n    )\n}\n\nfunction sendProducts(recipientId, category, proIdx){\n    bot.sendTypingOn(recipientId);\n    proIdx = parseInt(proIdx);\n    if(proIdx == 0){\n        renderProductsInitialMessage(recipientId, category);\n        bot.sendTypingOn(recipientId);\n    }\n\n    Parse.Cloud.run('getProducts', { businessId: BUSINESS_ID, category: category }).then(result => {\n        var elements = splitProducts(recipientId, result.products, proIdx);\n        var idx = Object.keys(result.products).length;\n        var buttons = [];\n        var catIni = (proIdx+1)*bot.limit;\n        var catFin =  (idx > catIni+bot.limit) ? catIni+bot.limit : idx;\n        /*\n        console.log('length: '+idx);\n        console.log('catIni: '+catIni);\n        console.log('catFin: '+catFin);\n        console.log('limit: '+(proIdx+1)*bot.limit);\n        */\n        if( idx > (proIdx+1)*bot.limit ){\n            buttons.push({\n                type: \"postback\",\n                title: \"Productos \"+(catIni+1)+\"-\"+catFin,\n                payload: \"SendProducts-\"+category+\"-\"+(proIdx+1),\n            });\n\n            elements.push({\n                title: \"Ver más productos \",\n                subtitle: \"Productos disponibles\",\n                buttons: buttons\n            });\n        }\n\n        var messageData = {\n            recipient: {\n                id: recipientId\n            },\n            message: {\n                attachment: {\n                    type: \"template\",\n                    payload: {\n                        template_type: \"generic\",\n                        elements: elements\n                    }\n                }\n            }\n        };\n\n        bot.sendTypingOff(recipientId);\n        bot.callSendAPI(messageData);\n    },\n    function(error) {\n        console.log('error');\n        console.log(error);\n    })\n}\n\nfunction splitProducts(recipientId, products, proIdx){\n    var customer = getData(recipientId, 'customer');\n    var image_url = customer.image.url;\n\n    if(typeof customer != 'undefined'){\n        image_url = customer.image.url;\n    }\n\n    var idx = 0;\n    var elements = [];\n\n    products.forEach(function(item){\n        if(item && item.get('name')){\n            if(idx >= (proIdx)*bot.limit && idx < (proIdx+1)*bot.limit){\n                var image = item.get('image');\n                if(image){\n                    image_url = image.url();\n                }\n                elements.push({\n                    title: item.get('name') +\": $\"+ item.get('priceDefault'),\n                    subtitle: item.get('description'),\n                    //item_url: \"http://www.mycolombianrecipes.com/fruit-cocktail-salpicon-de-frutas\",\n                    image_url: image_url,\n                    buttons: [{\n                        type: \"postback\",\n                        title: \"Agregar\",\n                        payload: \"AddProduct-\"+item.id,\n                    }]\n                })\n            }\n            idx = idx+1;\n        }\n    });\n    return elements;\n}\n\nfunction createCart(recipientId){\n    var userData = getData(recipientId);\n    Object.assign(userData, {'cart': {items: new Map()}});\n    return userData.cart;\n}\n\nfunction createOrder(recipientId){\n    var userData = getData(recipientId);\n    Object.assign(userData, {'order': new Map()});\n    return getData(recipientId, 'order')\n}\n\nfunction addProduct(recipientId, productId){\n    //console.log(\"Add product: \"+productId);\n    //console.log(\"Order.count: \"+order.count());\n    var product = new ParseModels.Product();\n    var cart = getData(recipientId, 'cart');\n\n    if(cart == undefined){\n        cart = createCart(recipientId);\n    }\n\n    var items = cart.items;\n\n    new Parse.Query(product).get(productId).then(\n        product => {\n            if(!items.get(productId)){\n                items.set(productId, {quantity: 1, price: product.get('priceDefault')});\n            }\n            else{\n                items.get(productId).quantity += 1;\n            }\n\n            saveCart(recipientId);\n\n            renderAddProductConfirmation(recipientId, productId);\n        },\n        (object, error) => {\n            console.log(error);\n            // error is an instance of Parse.Error.\n        }\n    );\n}\n\nfunction removeProduct(recipientId, productId){\n    var cart = getData(recipientId, 'cart');\n    console.log('Remove product '+productId);\n    if(cart == undefined){\n        cart = createCart(recipientId);\n    }\n\n    var items = cart.items;\n    var item = items.get(productId);\n\n    new Parse.Query(ParseModels.OrderItem).get(item.id, {\n        success: (orderItem) => {\n            orderItem.destroy({});\n            items.delete(productId);\n            var itemsPointers = [];\n\n            for(var [key, value] of items) {\n                itemsPointers.push({\"__type\": \"Pointer\", \"className\": \"OrderItem\", \"objectId\": value.id})\n            }\n\n            cart.itemsPointers = itemsPointers;\n            if(items.size == 0){\n                sendCart(recipientId);\n            }\n            else{\n                sendCartDetails(recipientId)\n            }\n        },\n        error: (orderItem, error) => {\n            console.log('error');\n            console.log(error);\n        }\n    });\n}\n\nfunction increaseOneProduct(recipientId, productId){\n    var cart = getData(recipientId, 'cart');\n\n    if(cart == undefined){\n        cart = createCart(recipientId);\n    }\n\n    var items = cart.items;\n    var item = items.get(productId);\n\n    item.quantity++;\n\n    new Parse.Query(ParseModels.OrderItem).get(item.id, {\n        success: (orderItem) => {\n            orderItem.set('amount', item.quantity);\n            orderItem.save();\n            sendCartDetails(recipientId)\n        },\n        error: (orderItem, error) => {\n            console.log('error');\n            console.log(error);\n        }\n    });\n}\n\nfunction decreaseOneProduct(recipientId, productId){\n    var cart = getData(recipientId, 'cart');\n\n    if(cart == undefined){\n        cart = createCart(recipientId);\n    }\n\n    var items = cart.items;\n    var item = items.get(productId);\n\n    item.quantity--;\n    console.log('Order Item');\n    console.log(item);\n\n    if(item.quantity > 0){\n        new Parse.Query(ParseModels.OrderItem).get(item.id, {\n            success: (orderItem) => {\n                orderItem.set('amount', item.quantity);\n                orderItem.save();\n                sendCartDetails(recipientId)\n            },\n            error: (orderItem, error) => {\n                console.log('error');\n                console.log(error);\n            }\n        });\n    }\n    else{\n        console.log('remove');\n        console.log(item);\n        removeProduct(recipientId, productId)\n    }\n}\n\nfunction saveCart(recipientId){\n    var consumerCart = new ParseModels.Cart();\n    var consumer = getData(recipientId, 'consumer');\n    var address = getData(recipientId, 'address');\n    var cart = getData(recipientId, 'cart');\n    var paymentMethod = getData(recipientId, 'paymentMethod');\n    var items = [];\n    var item;\n\n    for(var [id, properties] of cart.items){\n        //console.log('\\n'+id);\n        //console.log(properties);\n\n        item = new ParseModels.OrderItem();\n\n        if(properties.hasOwnProperty('id')){\n            item.set('id', properties.id);\n        }\n\n        item.set('product', {\n            __type: \"Pointer\",\n            className: \"Product\",\n            objectId: id\n        });\n        item.set('price', properties.price);\n        item.set('amount', properties.quantity);\n        item.set('modifiersGroups', []);\n        items.push(item);\n\n        /*\n        item.save(undefined, {\n            success: function(result) {\n                //console.log('\\nItem save');\n                //console.log(result);\n                //console.log(result.get('product'));\n                var itemId = result.get('product').objectId;\n                //console.log(cart.items.get(itemId));\n                cart.items.get(itemId).id = result.id;\n                //console.log(cart.items.get(itemId));\n            },\n            error: function(user, error) {\n                // Execute any logic that should take place if the save fails.\n                // error is a Parse.Error with an error code and message.\n                console.log('Failed to create new object, with error code: ' + error.message);\n            }\n        });\n        */\n    }\n\n    Parse.Object.saveAll(items, {\n        success: function(result) {\n            var itemsPointers = [];\n            for(var item of result){\n                var itemId = item.get('product').objectId;\n                cart.items.get(itemId).id = item.id;\n\n                itemsPointers.push({\"__type\":\"Pointer\", \"className\": \"OrderItem\", \"objectId\": item.id})\n            }\n\n            //console.log(cart.items);\n            //console.log(itemsPointers);\n\n            if(cart.hasOwnProperty('id')){\n                consumerCart.set('id', cart.id);\n            }\n\n            if(typeof paymentMethod != 'undefined'){\n                consumerCart.set('paymentMethod', paymentMethod.method)\n            }\n\n            consumerCart.set('consumerAddress', {\n                __type: \"Pointer\",\n                className: \"ConsumerAddress\",\n                objectId: address.objectId\n            });\n            consumerCart.set('consumer', {\n                __type: \"Pointer\",\n                className: \"Consumer\",\n                objectId: consumer.objectId\n            });\n            consumerCart.set('items', itemsPointers);\n\n            consumerCart.save(undefined, {\n                success: function(result) {\n                    /*delete userBuffer.address;\n                     delete userBuffer.location;\n                     delete userBuffer['address-name'];\n\n                     console.log(userBuffer);\n                     console.log('\\nConsumer kart');\n                     console.log(result);\n                    */\n                    cart['id'] = result.id;\n                    cart['rawParseObject'] = result;\n                    cart['itemsPointers'] = itemsPointers;\n                },\n                error: function(user, error) {\n                    // Execute any logic that should take place if the save fails.\n                    // error is a Parse.Error with an error code and message.\n                    console.log('Failed to create new object, with error code: ' + error.message);\n                }\n            });\n\n\n        },\n        error: function(user, error) {\n            // Execute any logic that should take place if the save fails.\n            // error is a Parse.Error with an error code and message.\n            console.log('Failed to create new object, with error code: ' + error.message);\n        }\n    });\n}\n\nfunction saveOrder(recipientId){\n    var order = new ParseModels.Order();\n    var consumer = getData(recipientId, 'consumer');\n    var customer = getData(recipientId, 'customer');\n    var cart = getData(recipientId, 'cart');\n    var address = getData(recipientId, 'address');\n    var paymentMethod = getData(recipientId, 'paymentMethod');\n    let pointSale = getData(recipientId, 'pointSale');\n    var state0 = orderStates.get(0);\n    var total = 0 ;\n\n    /*console.log(consumer);\n    console.log(consumer.name);\n    console.log(customer);\n    console.log(paymentMethod.method);\n    console.log(address);\n    console.log(state0);\n    console.log(cart);\n    console.log(pointSale);*/\n\n    cart.items.forEach(function(value, key){\n        //console.log(value);\n        total += value.quantity * value.price;\n    });\n\n    order.set('consumer', { __type: 'Pointer', className: 'Consumer', objectId: consumer.objectId });\n    order.set('consumerAddress', { __type: 'Pointer', className: 'ConsumerAddress', objectId: address.objectId });\n    order.set('pointSale', { __type: 'Pointer', className: 'CustomerPointSale', objectId: pointSale.objectId });\n    order.set('state', { __type: 'Pointer', className: 'OrderState', objectId: state0.objectId });\n    //order.set('dateSchedule')\n    order.set('items', cart.itemsPointers);\n    order.set('deliveryCost', pointSale.deliveryCost);\n    order.set('total', total);\n    order.set('paymentMethod', paymentMethod.method);\n    order.set('name', consumer.name);\n    //order.set('comment', \"Orden\");\n\n    console.log('Setting Order');\n\n    order.save(undefined, {\n        success: function(order) {\n\n            store.dispatch(Actions.setOrder(recipientId, order)).then(() => {\n                console.log('Save Order');\n                console.log(order);\n            });\n\n            console.log('Save Order');\n            console.log(order);\n        },\n        error: function(user, error) {\n            // Execute any logic that should take place if the save fails.\n            // error is a Parse.Error with an error code and message.\n            console.log('Failed to create new object, with error code: ' + error.message);\n            console.log(error);\n        }\n    });\n}\n\nfunction renderAddProductConfirmation(recipientId, productId){\n    return new Parse.Query(ParseModels.Product).get(productId).then(\n        product => {\n            var messageData = {\n                recipient: {\n                    id: recipientId\n                },\n                message: {\n                    \"text\": \"El producto \"+product.get('name')+\" ha sido agregado.\\n\\nDeseas agregar otro producto o terminar tu pedido?\",\n                    \"quick_replies\":[\n                        {\n                            \"content_type\":\"text\",\n                            \"title\":\"Seguir pidiendo\",\n                            \"payload\":\"SendCategories-0\"\n                        },\n                        {\n                            \"content_type\":\"text\",\n                            \"title\":\"Ver carrito\",\n                            \"payload\":\"SendCart\"\n                        }\n                    ]\n                }\n            };\n            bot.sendTypingOff(recipientId);\n            bot.callSendAPI(messageData);\n        },\n        (object, error) => {\n            console.log(error);\n            // error is an instance of Parse.Error.\n        }\n    )\n}\n\nfunction sendPurchaseOptions(recipientId){\n    bot.sendTypingOn(recipientId);\n    var messageData = {\n        recipient: {\n            id: recipientId\n        },\n        message: {\n            \"text\": \"Tenemos las siguientes opciones disponibles:\",\n            \"quick_replies\":[\n                {\n                    \"content_type\":\"text\",\n                    \"title\":\"Ver categorias\",\n                    \"payload\":\"SendCategories-0\"\n                },\n                {\n                    \"content_type\":\"text\",\n                    \"title\":\"Ver carrito\",\n                    \"payload\":\"SendCart\"\n                }\n            ]\n        }\n    };\n    bot.sendTypingOff(recipientId);\n    bot.callSendAPI(messageData);\n}\n\nfunction sendCart(recipientId){\n    // Generate a random receipt ID as the API requires a unique ID\n    var Product = Parse.Object.extend(\"Product\");\n    var consumer = getData(recipientId, 'consumer');\n    var cart = getData(recipientId, 'cart');\n    var address = getData(recipientId, 'address');\n    var customer = getData(recipientId, 'customer');\n    var customer_image_url;\n\n    console.log('sendCart');\n\n    if(typeof customer != 'undefined'){\n        customer_image_url = customer.image.url;\n    }\n\n    if(cart == undefined){\n        cart = createCart(recipientId);\n    }\n\n    var items = cart.items;\n\n    bot.sendTypingOn(recipientId);\n\n    var elements = [];\n    var element = {};\n    var total = 0;\n    var orderLimit = items.size;\n    var ind = 0;\n    var image;\n    var image_url;\n\n    //console.log('Shopping Cart');\n    //console.log(orderLimit);\n    if(orderLimit == 0){\n        renderShoppingCartEmpty(recipientId)\n    }\n    else{\n        items.forEach(function(value, key){\n            var product = new Parse.Query(Product);\n\n            product.get(key, {\n                success: function (item) {\n                    image = item.get('image');\n                    image_url = customer_image_url\n                    if(image){\n                        image_url = image.url();\n                    }\n\n                    element = {};\n                    element['title'] = item.get('name');\n                    element['subtitle'] = item.get('description');\n                    element['quantity'] = value.quantity;\n                    element['price'] = parseInt(item.get('priceDefault'));\n                    element['currency'] = \"COP\";\n                    element['image_url'] = image_url;\n\n                    elements.push(element);\n                    total += element['quantity']*element['price'];\n\n                    ind++;\n\n                    if(ind == orderLimit){\n                        renderShoppingCart(recipientId, cart.id, elements, total)\n                    }\n                },\n                error: function (error) {\n                    alert(\"Error: \" + error.code + \" \" + error.message);\n                }\n            })\n        });\n    }\n\n}\n\nfunction sendCartDetails(recipientId){\n    bot.sendTypingOn(recipientId);\n    renderCartDetails(recipientId)\n}\n\nfunction renderCartDetails(recipientId){\n    var cart = getData(recipientId, 'cart');\n    var customer = getData(recipientId, 'customer');\n    var consumer = getData(recipientId, 'consumer');\n    var image_url = customer.image.url;\n    var items = cart.items;\n    var elements = [];\n\n    items.forEach(function(value, key) {\n        if (elements.length <= bot.limit) {\n            new Parse.Query(ParseModels.Product).get(key).then(\n            product => {\n                var image = product.get('image');\n                if(image){\n                    image_url = image.url();\n                }\n\n                elements.push({\n                    \"title\": product.get('name')+\": $\"+value.price,\n                    \"subtitle\": \"Cantidad solicitada: \"+value.quantity,\n                    \"image_url\": image_url,\n                    \"buttons\": [\n                        {\n                            \"type\": \"postback\",\n                            \"title\": \"Quitar\",\n                            \"payload\": \"RemoveProduct-\" + key\n                        },\n                        {\n                            \"type\": \"postback\",\n                            \"title\": \"Aumentar 1\",\n                            \"payload\": \"IncreaseOneProduct-\" + key\n                        },\n                        {\n                            \"type\": \"postback\",\n                            \"title\": \"Disminuir 1\",\n                            \"payload\": \"DecreaseOneProduct-\" + key\n                        }\n                    ]\n                });\n\n                if(elements.length == bot.limit || elements.length == items.size){\n                    var messageData = {\n                        recipient: {\n                            id: recipientId\n                        },\n                        message: {\n                            \"attachment\":{\n                                \"type\": \"template\",\n                                \"payload\":{\n                                    \"template_type\": \"generic\",\n                                    \"elements\": elements\n                                }\n                            }\n                        }\n                    };\n                    bot.sendTypingOff(recipientId);\n                    bot.callSendAPI(messageData, renderEditCartOptions);\n                }\n            })\n        }\n    });\n}\n\nfunction renderEditCartOptions(recipientId){\n\n    var messageData = {\n        \"recipient\": {\n            \"id\": recipientId\n        },\n        \"message\": {\n            \"text\": \"Opciones del carrito:\",\n            \"quick_replies\":[\n                {\n                    \"content_type\":\"text\",\n                    \"title\":\"Finalizar pedido\",\n                    \"payload\":\"CheckOrder\"\n                },\n                {\n                    \"content_type\":\"text\",\n                    \"title\":\"Seguir Pidiendo\",\n                    \"payload\":\"SendCategories-0\"\n                }\n            ]\n        }\n    };\n\n    bot.callSendAPI(messageData);\n}\n\nfunction renderShoppingCart(recipientId, cartId, elements, total){\n    //var receiptId = \"Order\" + Math.floor(Math.random()*1000);\n    var address = getData(recipientId, 'address');\n    var pointSale = getData(recipientId, 'pointSale');\n    var payment_method = getData(recipientId, 'payment_method');\n    var addressData = undefined;\n\n    if(payment_method == undefined){\n        payment_method = {name: 'Sin definir'}\n    }\n\n    if(address != undefined){\n        addressData = {\n            street_1: address.address,\n            street_2: \"\",\n            city: address.city,\n            postal_code: address.postalCode,\n            state: address.state,\n            country: address.countryCode\n        }\n    }\n\n    authentication(recipientId, (user)=>{\n        if(user){\n            var messageData = {\n                recipient: {\n                    id: recipientId\n                },\n                message:{\n                    attachment: {\n                        type: \"template\",\n                        payload: {\n                            template_type: \"receipt\",\n                            recipient_name: user.get('first_name')+\" \"+user.get('last_name'),\n                            order_number: cartId,\n                            currency: \"COP\",\n                            payment_method: payment_method.name,\n                            order_url: \"http://petersapparel.parseapp.com/order?order_id=123456\",\n                            timestamp: Math.trunc(Date.now()/1000).toString(),\n                            elements: elements,\n                            address: addressData,\n                            summary: {\n                                subtotal: total,\n                                shipping_cost: pointSale.deliveryCost,\n                                //total_tax: 0,\n                                total_cost: total+pointSale.deliveryCost\n                            }\n                            //adjustments: [{\n                            //  name: \"New Customer Discount\",\n                            //  amount: -1000\n                            //}, {\n                            //    name: \"$1000 Off Coupon\",\n                            //    amount: -1000\n                            //}]\n                        }\n                    },\n                    \"quick_replies\":[\n                        {\n                            \"content_type\":\"text\",\n                            \"title\":\"Finalizar pedido\",\n                            \"payload\":\"CheckOrder\"\n                        },\n                        {\n                            \"content_type\":\"text\",\n                            \"title\":\"Seguir Pidiendo\",\n                            \"payload\":\"SendCategories-0\"\n                        },\n                        {\n                            \"content_type\":\"text\",\n                            \"title\":\"Modificar carrito\",\n                            \"payload\":\"SendCartDetails\"\n                        },\n                        {\n                            \"content_type\":\"text\",\n                            \"title\":\"Borrar carrito\",\n                            \"payload\": \"ClearCart\"\n                        }\n                    ]\n                }\n            };\n\n            console.log(messageData);\n\n            bot.sendTypingOff(recipientId);\n            bot.callSendAPI(messageData);\n        }\n    });\n}\n\nfunction renderShoppingCartEmpty(recipientId){\n    var messageData = {\n        recipient: {\n            id: recipientId\n        },\n        message: {\n            \"text\": \"Tu carrito de compras está vacío.\"\n        }\n    };\n    bot.sendTypingOff(recipientId);\n    bot.callSendAPI(messageData, sendPurchaseOptions);\n}\n\nfunction editCart(recipientId){\n    var cart = getData(recipientId, 'cart');\n\n    bot.sendTypingOn(recipientId);\n    var messageData = {\n        recipient: {\n            id: recipientId\n        },\n        message: {\n            \"attachment\": {\n                \"type\": \"template\",\n                \"payload\": {\n                    \"template_type\": \"generic\",\n                    \"elements\": [\n                        {\n                            \"title\": \"Opciones\",\n                            //\"item_url\": \"https://petersfancyapparel.com/classic_white_tshirt\",\n                            \"image_url\": SERVER_URL+\"assets/thinking.jpg\",\n                            //\"subtitle\": \"Soft white cotton t-shirt is back in style\",\n                            \"buttons\": [\n                                {\n                                    \"type\": \"web_url\",\n                                    \"url\": SERVER_URL+\"cart?\"+cart.id,\n                                    \"title\": \"Remover producto\",\n                                    \"webview_height_ratio\": \"tall\"\n                                }\n                            ]\n                        }\n                    ]\n                }\n            }\n        }\n    };\n    bot.sendTypingOff(recipientId);\n    bot.callSendAPI(messageData);\n\n}\n\nfunction clearCart(recipientId){\n    var cart = getData(recipientId, 'cart');\n\n    if(typeof cart == 'undefined'){\n\n    }\n    else{\n        var items = cart.items;\n        cart.itemsPointers = [];\n\n        items.forEach(function(value, key){\n            new Parse.Query(ParseModels.OrderItem).get(value.id, {\n                success: (orderItem) => {\n                    orderItem.destroy({});\n                    items.delete(key);\n                    if(items.size == 0){\n                        sendCart(recipientId);\n                    }\n                },\n                error: (orderItem, error) => {\n                    console.log('error');\n                    console.log(error);\n                }\n            });\n        });\n    }\n}\n\nfunction checkOrder(recipientId){\n    checkPayment(recipientId);\n}\n\nfunction checkPayment(recipientId){\n    bot.sendTypingOn(recipientId);\n    store.dispatch(Actions.loadPaymentMethods(recipientId)).then(() => {\n        renderCheckPayment(recipientId)\n    });\n}\n\nfunction checkAddress(recipientId){\n\n}\n\nfunction renderCheckPayment(recipientId){\n    var paymentMethods = getData(recipientId, 'paymentMethods');\n    var quick_replies = [];\n\n    console.log(paymentMethods);\n\n    for(var i in paymentMethods){\n\n        quick_replies.push({\n            \"content_type\": \"text\",\n            \"title\": paymentMethods[i].name.substring(0,20),\n            \"payload\": \"Checkout-\"+paymentMethods[i].objectId\n        });\n    }\n    //console.log(quick_replies);\n\n    var messageData = {\n        recipient: {\n            id: recipientId\n        },\n        message: {\n            \"text\": \"Como vas a pagar tu pedido? (Tu pedido se cobra cuando lo recibes)\",\n            \"quick_replies\": quick_replies\n        }\n    };\n    bot.sendTypingOff(recipientId);\n    bot.callSendAPI(messageData);\n}\n\nfunction checkout(recipientId, id){\n    bot.sendTypingOn(recipientId);\n    console.log('checkout');\n    console.log(id);\n\n    store.dispatch(Actions.setPaymentMethod(recipientId, id)).then(\n        () => {\n\n            let paymentMethod = getData(recipientId, 'paymentMethod');\n            console.log(paymentMethod);\n            var paymentFunction = paymentTypes.get(paymentMethod.method.objectId);\n            console.log(paymentFunction);\n\n            paymentFunction(recipientId);\n            /*\n            var cart = new ParseModels.Order();\n            cart.set('name', userBuffer['address-name']);\n            cart.set('address', userBuffer.address);\n            cart.set('consumer', {\n                __type: \"Pointer\",\n                className: \"Consumer\",\n                objectId: consumer.objectId\n            });\n\n\n            cart.save(undefined, {\n                success: function(result) {\n\n                    delete userBuffer.address;\n                    delete userBuffer.location;\n                    delete userBuffer['address-name'];\n\n                    console.log(userBuffer);\n\n                    console.log('Consumer Address');\n\n                },\n                error: function(user, error) {\n                    // Execute any logic that should take place if the save fails.\n                    // error is a Parse.Error with an error code and message.\n                    console.log('Failed to create new object, with error code: ' + error.message);\n                }\n            });\n            */\n        }\n    );\n}\n\nfunction setPayment(recipientId, id){\n\n}\n\nfunction renderCash(recipientId){\n    var messageData = {\n        recipient: {\n            id: recipientId\n        },\n        message: {\n            \"text\": \"Se ha registrado el pago en efectivo\"\n        }\n    };\n\n    saveCart(recipientId);\n\n    bot.sendTypingOff(recipientId);\n    bot.callSendAPI(messageData, orderConfirmation);\n}\n\nfunction renderCreditCard(recipientId){\n    var creditCards = getData(recipientId, 'creditCards');\n    var consumer = getData(recipientId, 'consumer');\n\n    if(!_.isEmpty(consumer.user)) {\n        store.dispatch(Actions.loadUserCreditCards(recipientId, consumer.user)).then(\n            () => {\n                sendRegisteredCreditCards(recipientId);\n            }\n        );\n    }\n}\n\nfunction registerCreditCard(recipientId){\n    bot.sendTypingOn(recipientId);\n    var consumer = getData(recipientId, 'consumer');\n\n    var messageData = {\n        recipient: {\n            id: recipientId\n        },\n        message: {\n            \"attachment\":{\n                \"type\":\"template\",\n                \"payload\": {\n                    \"template_type\": \"generic\",\n                    \"elements\": [{\n                        \"title\": \"Registro de tarjeta de credito y finalización de tu pedido.\\n\\nEstas de acuerdo?\",\n                        \"image_url\": SERVER_URL + \"assets/money.jpg\",\n                        \"subtitle\": \"Por razones de seguridad te redireccionaremos a una página web segura.\",\n                        \"buttons\": [\n                            {\n                                \"type\": \"web_url\",\n                                \"title\": \"Si\",\n                                \"url\": SERVER_URL + \"creditcard?id=\" + consumer.objectId,\n                                \"webview_height_ratio\": \"tall\"\n                            },\n                            {\n                                \"type\": \"postback\",\n                                \"title\": \"No\",\n                                \"payload\": \"CancelRegisterCreditCard\"\n                        }]\n                    }]\n                }\n            }\n        }\n    };\n    bot.sendTypingOff(recipientId);\n    bot.callSendAPI(messageData);\n}\n\nfunction cancelRegisterCreditCard(recipientId){\n    bot.sendTypingOn(recipientId);\n    var messageData = {\n        recipient: {\n            id: recipientId\n        },\n        message: {\n            \"text\": \"Si no ingresas los datos de tu tarjeta en nuestro sitio seguro, no podras comprar con tarjeta online\"\n        }\n    };\n    bot.sendTypingOff(recipientId);\n    bot.callSendAPI(messageData, checkPayment);\n}\n\nfunction sendRegisteredCreditCards(recipientId){\n    bot.sendTypingOn(recipientId);\n    var consumer = getData(recipientId, 'consumer');\n\n    store.dispatch(Actions.loadUserCreditCards(recipientId, consumer.user)).then(\n    () => {\n        var creditCards = getData(recipientId, 'creditCards');\n        if (creditCards.length == 0) {\n            //saveCart(recipientId);\n            renderNoRegisteredCreditCards(recipientId);\n        }\n        else {\n            renderRegisteredCreditCards(recipientId);\n        }\n    });\n}\n\nfunction renderNoRegisteredCreditCards(recipientId){\n    var messageData = {\n        recipient: {\n            id: recipientId\n        },\n        message: {\n            \"text\": \"Aun no tienes tarjetas registradas, deseas registrar una tarjeta?\",\n            \"quick_replies\": [\n                {\n                    \"content_type\":\"text\",\n                    \"title\":\"Si\",\n                    \"payload\":\"RegisterCreditCard\"\n                },\n                {\n                    \"content_type\":\"text\",\n                    \"title\":\"No\",\n                    \"payload\":\"CheckPayment\"\n                }\n            ]\n        }\n    };\n\n    bot.sendTypingOff(recipientId);\n    bot.callSendAPI(messageData);\n}\n\nfunction renderRegisteredCreditCards(recipientId){\n    var creditCards = getData(recipientId, 'creditCards');\n    var quick_replies = [];\n\n    quick_replies.push({\n        \"content_type\": \"text\",\n        \"title\": \"Agregar tarjeta\",\n        \"payload\": \"RegisterCreditCard\"\n    });\n\n    for(var card of creditCards){\n        if (quick_replies.length < bot.limit) {\n            quick_replies.push({\n                \"content_type\": \"text\",\n                \"title\": card.type+\" \"+card.lastFour,\n                \"payload\": \"PayWithCreditCard-\" + card.lastFour\n            });\n        }\n    }\n\n    var messageData = {\n        recipient: {\n            id: recipientId\n        },\n        message: {\n            \"text\": \"Con cual tarjeta quieres pagar?\",\n            \"quick_replies\": quick_replies\n        }\n    };\n    bot.sendTypingOff(recipientId);\n    bot.callSendAPI(messageData);\n}\n\nfunction payWithCreditCard(recipientId, creditCardId){\n    bot.sendTypingOn(recipientId);\n    console.log(creditCardId);\n\n\n\n    orderConfirmation(recipientId)\n}\n\nfunction orderConfirmation(recipientId){\n    bot.sendTypingOn(recipientId);\n    var state0 = orderStates.get(0);\n\n    var messageData = {\n        recipient: {\n            id: recipientId\n        },\n        message: {\n            \"text\": state0.messagePush+\"\\n\\nEn un momento te estaremos dando información en tiempo real sobre tu pedido\"\n        }\n    };\n\n    saveOrder(recipientId);\n\n    bot.sendTypingOff(recipientId);\n    bot.callSendAPI(messageData);\n}\n\nfunction orderState(recipientId){\n    bot.sendTypingOn(recipientId);\n    var messageData = {\n        recipient: {\n            id: recipientId\n        },\n        message: {\n            \"text\": \"Tu pedido ha sido Aceptado. \\n\\nLo estan preparando en nuestra sede y te lo enviaremos en aproximadamente 10 minutos\"\n        }\n    };\n    bot.sendTypingOff(recipientId);\n    bot.callSendAPI(messageData, orderSent);\n}\n\nfunction orderSent(recipientId){\n    bot.sendTypingOn(recipientId);\n    var messageData = {\n        recipient: {\n            id: recipientId\n        },\n        message: {\n            \"text\": \"Buenas noticias, Tu pedido ha sido Enviado. \\n\\nHaz click en el mapa para vel tu pedido\"\n        }\n    };\n    bot.sendTypingOff(recipientId);\n    bot.callSendAPI(messageData, serviceRating);\n}\n\nfunction renderOrderState(recipientId){\n    bot.sendTypingOn(recipientId);\n    var orderState = getData(recipientId, 'orderState');\n\n\n\n    var messageData = {\n        recipient: {\n            id: recipientId\n        },\n        message: {\n            \"text\": orderState.messagePush\n        }\n    };\n    bot.sendTypingOff(recipientId);\n    if(orderState.order != 5){\n        bot.callSendAPI(messageData);\n    }\n    else{\n        bot.callSendAPI(messageData, serviceRating);\n    }\n}\n\nfunction serviceRating(recipientId){\n    bot.sendTypingOn(recipientId);\n    var messageData = {\n        recipient: {\n            id: recipientId\n        },\n        message: {\n            \"text\": \"Califica tu experiencia para ayudarnos a mejorar. \\n\\nDe 1 a 5 cuantas extrellas merece nuestro servicio?\",\n            \"quick_replies\":[\n                {\n                    \"content_type\":\"text\",\n                    \"title\":\"5 (Excelente)\",\n                    \"payload\":\"SetScore-5\"\n                },\n                {\n                    \"content_type\":\"text\",\n                    \"title\":\"4 (Bien)\",\n                    \"payload\":\"SetScore-4\"\n                },\n                {\n                    \"content_type\":\"text\",\n                    \"title\":\"3 (Regular)\",\n                    \"payload\":\"SetScore-3\"\n                },\n                {\n                    \"content_type\":\"text\",\n                    \"title\":\"2 (Mal)\",\n                    \"payload\":\"SetScore-2\"\n                },\n                {\n                    \"content_type\":\"text\",\n                    \"title\":\"2 (Muy mal)\",\n                    \"payload\":\"SetScore-1\"\n                },\n            ]\n        }\n    };\n    bot.sendTypingOff(recipientId);\n    bot.callSendAPI(messageData);\n}\n\nfunction setScore(recipientId, score){\n    var order = getData(recipientId, 'order');\n\n    bot.sendTypingOn(recipientId);\n\n    Parse.Cloud.run('rateOrder', { orderId: order.objectId, score: Number(score), comment: ''}).then(\n        function(result){\n            thank(recipientId)\n        },\n        function(error) {\n            console.log('error');\n            console.log(error);\n        });\n}\n\nfunction thank(recipientId){\n    bot.sendTypingOn(recipientId);\n    var messageData = {\n        recipient: {\n            id: recipientId\n        },\n        message: {\n            \"text\": \"Gracias, esperamos tener el gusto de atenderle nuevamente\"\n        }\n    };\n    bot.sendTypingOff(recipientId);\n    bot.callSendAPI(messageData);\n}\n\nfunction searchProducts(recipientId, query, index){\n    bot.sendTypingOn(recipientId);\n\n    Parse.Cloud.run('search', { businessId: BUSINESS_ID, q: query }).then(\n        function(result){\n            if(result.length == 0){\n                renderSearchEmpty(recipientId);\n            }\n            else if(result.length == 1 && result[0].type == 'Category'){\n                sendProducts(recipientId, result[0].id, 0)\n            }\n            else{\n                if(index == undefined)\n                    index = 0;\n                else if( typeof index == 'string')\n                    index = parseInt(index);\n\n                if(index == 0){\n                    renderSearchInitial(recipientId);\n                    bot.sendTypingOn(recipientId);\n                }\n\n                var elements = splitSearchResult(recipientId, result, index);\n                var idx = Object.keys(result).length;\n                var buttons = [];\n                var catIni = (index+1)*bot.limit;\n                var catFin =  (idx > catIni+bot.limit) ? catIni+bot.limit : idx;\n\n                if(idx > (index+1)*bot.limit){\n                    buttons.push({\n                        type: \"postback\",\n                        title: \"Productos \"+(catIni+1)+\"-\"+catFin,\n                        payload: \"Search-\"+(index+1),\n                    });\n\n                    elements.push({\n                        title: \"Ver más productos \",\n                        subtitle: \"Productos disponibles\",\n                        buttons: buttons\n                    });\n                }\n\n                var messageData = {\n                    recipient: {\n                        id: recipientId\n                    },\n                    message: {\n                        attachment: {\n                            type: \"template\",\n                            payload: {\n                                template_type: \"generic\",\n                                elements: elements\n                            }\n                        }\n                    }\n                };\n\n                bot.sendTypingOff(recipientId);\n                bot.callSendAPI(messageData);\n            }\n        },\n        function(error) {\n            console.log('error');\n            console.log(error);\n        }\n    );\n}\n\nfunction renderSearchInitial(recipientId){\n    var messageData = {\n        recipient: {\n            id: recipientId\n        },\n        message: {\n            \"text\": \"Se han encontrado los siguientes productos:\"\n        }\n    };\n    bot.sendTypingOff(recipientId);\n    bot.callSendAPI(messageData);\n}\n\nfunction renderSearchEmpty(recipientId){\n    var messageData = {\n        recipient: {\n            id: recipientId\n        },\n        message: {\n            \"text\": \"No se han encontrado productos que coincidan\"\n        }\n    };\n    bot.sendTypingOff(recipientId);\n    bot.callSendAPI(messageData);\n}\n\nfunction splitSearchResult(recipientId, products, index){\n    var customer = getData(recipientId, 'customer');\n    var image_url = customer.image.url;\n    var idx = 0;\n    var elements = [];\n\n    products.forEach(function(item){\n        if(item && item.name && item.type == 'Product'){\n            //item.id get Product information\n            if(idx >= (index)*bot.limit && idx < (index+1)*bot.limit){\n                var image = item.image;\n                if(image){\n                    image_url = image.url();\n                }\n                elements.push({\n                    title: item.name,\n                    //subtitle: item.get('name'),\n                    //item_url: \"http://www.mycolombianrecipes.com/fruit-cocktail-salpicon-de-frutas\",\n                    image_url: image_url,\n                    buttons: [{\n                        type: \"postback\",\n                        title: 'Agregar',\n                        payload: \"AddProduct-\"+item.id,\n                    }]\n                });\n                idx = idx+1;\n            }\n        }\n    });\n    return elements;\n}\n\nfunction sendHelp(recipientId){\n    bot.sendTypingOn(recipientId);\n    var messageData = {\n        recipient: {\n            id: recipientId\n        },\n        message: {\n            \"text\": \"InOut Bot.\\n\\nTe permite visualizar las opciones de productos, agregarlos al carrito y realizar tu compra por medio del chat de facebook.\\n\\nFuncionalidades disponibles: \\n\\n'Hola', para iniciar la conversación\\n'Pedir Domicilio', si quieres realizar un domicilio\\n'Carrito', para ver el estado actual de tu carrito\"\n        }\n    };\n    bot.sendTypingOff(recipientId);\n    bot.callSendAPI(messageData, sendContactUs);\n}\n\nfunction sendContactUs(recipientId){\n    bot.sendTypingOn(recipientId);\n    var messageData = {\n        recipient: {\n            id: recipientId\n        },\n        message: {\n            \"text\": \" Para mayor información puedes contactarnos en:\\n\\n Web: http://www.inoutdelivery.com/\\n\\n Email: john.garavito@inoutdelivery.com\"\n        }\n    };\n    bot.sendTypingOff(recipientId);\n    bot.callSendAPI(messageData);\n}\n\nfunction sendRegisterFacebookUser(recipientId){\n    bot.sendTypingOn(recipientId);\n    var messageData = {\n        recipient: {\n            id: recipientId\n        },\n        message: {\n            \"text\": \"Registro exitoso.\",\n\n        }\n    };\n    bot.sendTypingOff(recipientId);\n    bot.callSendAPI(messageData);\n}\n\nfunction sendOrders(recipientId){\n    bot.sendTypingOn(recipientId);\n    var consumer = getData(recipientId, 'consumer');\n\n    if(typeof consumer == 'undefined'){\n        store.dispatch(Actions.loadCustomer(recipientId, BUSINESS_ID)).then(\n            () => {\n                /*authentication(recipientId, user => {\n                    if(user){\n                        store.dispatch(Actions.loadConsumer(recipientId, user)).then(\n                            () => {\n                                consumer = getData(recipientId, 'consumer');\n                                store.dispatch(Actions.loadConsumerAddresses(recipientId, consumer.rawParseObject)).then(\n                                    () => {\n                                        renderAddressMenu(recipientId);\n                                    }\n                                );\n                            }\n                        );\n                    }\n                });*/\n            }\n        )\n    }\n    else{\n        console.log('consumer');\n        console.log(consumer.rawParseObject);\n        store.dispatch(Actions.loadConsumerOrders(recipientId, consumer.rawParseObject)).then(\n            () => {\n                renderOrders(recipientId);\n            }\n        );\n    }\n}\n\nfunction renderOrders(recipientId){\n    var orders = getData(recipientId, 'orders');\n    var elements = [];\n\n    console.log(orders);\n\n    elements.push({\n        \"title\": \"Nueva orden\",\n        \"subtitle\": \"Puedes realizar una orden\",\n        \"image_url\": SERVER_URL+\"assets/conversation.jpg\",\n        \"buttons\": [\n            {\n                \"type\": \"postback\",\n                \"title\": \"Nueva orden\",\n                \"payload\": \"NewOrder\"\n            }\n        ]\n    });\n\n    var messageData = {\n        recipient: {\n            id: recipientId\n        },\n        message: {\n            \"attachment\":{\n                \"type\": \"template\",\n                \"payload\":{\n                    \"template_type\": \"generic\",\n                    \"elements\": elements\n                }\n            }\n        }\n    };\n\n    bot.sendTypingOff(recipientId);\n    bot.callSendAPI(messageData);\n}\n\nfunction newOrder(recipientId){\n    clearCart(recipientId);\n    sendAddresses(recipientId);\n}\n\nfunction renderShoppingCartOptions(recipientId){\n    var messageData = {\n        recipient: {\n            id: recipientId\n        },\n        message: {\n            \"text\": \"Opciones del carrito\",\n            \"quick_replies\":[\n                {\n                    \"content_type\":\"text\",\n                    \"title\":\"Finalizar pedido\",\n                    \"payload\":\"CheckOrder\"\n                },\n                {\n                    \"content_type\":\"text\",\n                    \"title\":\"Seguir Pidiendo\",\n                    \"payload\":\"SendCategories-0\"\n                },\n                {\n                    \"content_type\":\"text\",\n                    \"title\":\"Borrar carrito\",\n                    \"payload\": \"ClearCart\"\n                }\n            ]\n        }\n    };\n    bot.sendTypingOff(recipientId);\n    bot.callSendAPI(messageData);\n}\n\nfunction updateCart(recipientId){\n    var consumerCart = new ParseModels.Cart();\n    var localCart = getData(recipientId, 'cart');\n\n    new Parse.Query(consumerCart).get(localCart.id).then(\n        cart => {\n            //console.log('updateCart');\n            console.log(cart);\n        },\n        (object, error) => {\n            console.log(error);\n            // error is an instance of Parse.Error.\n        }\n    );\n}\n\nbot.app.post('/CreditCardRegistered', function (req, res) {\n    var data = req.body;\n    sendRegisteredCreditCards(data.recipientId);\n});\n\nbot.app.get('/creditcard', function(req, res) {\n    res.sendFile(path.join(__dirname+'/views/cardForm.html'));\n});\n\nbot.app.post('/registerCreditCard', function (req, res) {\n    const User = Parse.Object.extend('User');\n    const Consumer = Parse.Object.extend('Consumer');\n    var data = req.body;\n    var consumerID = data['consumerID'];\n\n    console.log('registerCreditCard');\n\n    new Parse.Query(Consumer).get(consumerID).then(consumer => {\n            if(consumer){\n                new Parse.Query(User).get(consumer.get('user').id).then(user => {\n                    var username = user.get('username');\n                    var recipientId = user.get('facebookId');\n                    Parse.User.logIn(username, username, {\n                        success: function(userData) {\n                            var expiry = data['expiry'].replace(/\\s+/g,\"\").split('/');\n\n                            request.post({\n                                url: PARSE_SERVER_URL+'/functions/addCreditCard',\n                                headers: {\n                                    'Content-Type': 'text/plain;charset=UTF-8',\n                                    'X-Parse-Application-Id': PARSE_APP_ID,\n                                    'X-Parse-Session-Token': userData.getSessionToken()\n                                },\n                                json: { \"number\": data['number'].replace(/\\s+/g,\"\"),\n                                    \"verificationNumber\": data['CCV'],\n                                    \"expirationMonth\": expiry[0],\n                                    \"expirationYear\": expiry[1],\n                                    \"holderName\": data['first-name']+' '+data['last-name']\n                                }\n                            }, function callback(error, response, body) {\n                                if (!error && response.statusCode == 200) {\n\n                                    request.post({\n                                        url: SERVER_URL+'CreditCardRegistered',\n                                        json: { \"recipientId\": recipientId}\n                                    })\n                                }\n                                else{\n                                    console.log(response.statusCode);\n                                    console.log('error');\n                                    console.log(error);\n                                }\n                            });\n                        },\n                        error: function(user, error) {\n                            console.log('error');\n                            console.log(error);\n                        }\n                    });\n                });\n\n                res.sendFile(path.join(__dirname+'/views/cardRegistered.html'));\n            }\n        },\n        (object, error) => {\n            console.log(error);\n        });\n});\n\nbot.app.post('/changeOrderState', function (req, res) {\n    const User = Parse.Object.extend('User');\n\n    var data = req.body;\n\n    new Parse.Query(ParseModels.Consumer).get(data['consumerID']).then(consumer => {\n            if(consumer){\n                new Parse.Query(User).get(consumer.get('user').id).then(user => {\n                    var username = user.get('username');\n                    var recipientId = user.get('facebookId');\n\n                    new Parse.Query(ParseModels.OrderState).get(data['stateID']).then(orderState => {\n                        store.dispatch(Actions.setOrderState(recipientId, orderState)).then(() => {\n                            renderOrderState(recipientId);\n                        })\n                    })\n                    .fail(error => {\n                        console.log('Error code: ' + error.message);\n                    });\n                });\n            }\n        },\n        (object, error) => {\n            console.log(error);\n        });\n\n    /*\n\n     Parse.Cloud.run('orders').then(\n     function(result){\n     console.log(result);\n     },\n     function(error) {\n     console.log('error');\n     console.log(error);\n     });\n\n\n\n\n    request.get({\n        url: PARSE_SERVER_URL+'/classes/Order?where:{\"objectId\":\"'+data['orderID']+'\"}',\n        headers: {\n            'Content-Type': 'text/plain;charset=UTF-8',\n            'X-Parse-Application-Id': PARSE_APP_ID,\n        }\n    }, function callback(error, response, body) {\n        console.log('get order')\n        console.log(body)\n    });\n    */\n    res.json({result: 'OK'});\n});\n\nvar paymentTypes = new Map();\n\nnew Parse.Query(ParseModels.PaymentMethod).find().then(\n    methods => {\n        for(var method of methods){\n            var tmpMethod = extractParseAttributes(method);\n            if(tmpMethod.objectId == 'Nn0joKC5VK'){\n                paymentTypes.set('Nn0joKC5VK', renderCash);\n            }\n            else if(tmpMethod.objectId == 'UdK0Ifc4IF'){\n                paymentTypes.set('UdK0Ifc4IF', renderCreditCard);\n            }\n            //orderStates.set(state.get('order'), extractParseAttributes(state));\n        }\n    },\n    (object, error) => {\n        console.log(error);\n    });\n\nvar orderStates = new Map();\n\nnew Parse.Query(ParseModels.OrderState).find().then(\n    states => {\n        for(var state of states){\n            orderStates.set(state.get('order'), extractParseAttributes(state));\n        }\n    },\n    (object, error) => {\n        console.log(error);\n    });\n\n//orderStates.set('HUIPd800xH', { __type: 'Pointer', className: 'OrderState', objectId: 'HUIPd800xH' });\n\nstore.dispatch({type: types.APP_LOADED})\n\n/*\nconsole.log('Exist FB.init: '+( typeof FB.init === 'function') );\nconsole.log(FB.getLoginUrl({ scope: 'user_about_me' }));\n\n Parse.FacebookUtils.init({ // this line replaces FB.init({\n appId      : FACEBOOK_APP_ID, // Facebook App ID\n cookie     : true,  // enable cookies to allow Parse to access the session\n xfbml      : true,  // initialize Facebook social plugins on the page\n version    : 'v2.4' // point to the latest Facebook Graph API version\n });\n */"]}