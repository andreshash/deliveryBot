{"version":3,"sources":["app.js"],"names":[],"mappings":"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","file":"app-compiled.js","sourcesContent":["import * as _ from 'underscore';\nimport * as bot from './bot'\nimport * as types from './constants/actionTypes'\nimport * as Actions from './actions/index'\nimport * as ParseModels from './ParseModels';\nimport { extractParseAttributes } from './ParseUtils'\nimport { createStore, applyMiddleware } from 'redux';\n\nimport config from 'config'\nimport Parse from 'parse/node'\nimport request from 'request'\nimport HashMap  from 'hashmap'\nimport objectAssign from 'object-assign'\nimport FB from 'fb'\nimport thunk from 'redux-thunk';\n\nconst APP_SECRET = (process.env.MESSENGER_APP_SECRET) ? process.env.MESSENGER_APP_SECRET : config.get('APP_SECRET');\nconst PAGE_ACCESS_TOKEN = (process.env.MESSENGER_PAGE_ACCESS_TOKEN) ? (process.env.MESSENGER_PAGE_ACCESS_TOKEN) : config.get('PAGE_ACCESS_TOKEN');\n\nconst PARSE_APP_ID = (process.env.PARSE_APP_ID) ? (process.env.PARSE_APP_ID) : config.get('PARSE_APP_ID');\n\nconst PARSE_SERVER_URL = (process.env.PARSE_SERVER_URL) ? (process.env.PARSE_SERVER_URL) : config.get('PARSE_SERVER_URL');\n\nconst FACEBOOK_APP_ID = (process.env.FACEBOOK_APP_ID) ? (process.env.FACEBOOK_APP_ID) : config.get('FACEBOOK_APP_ID');\n\nconst REDIRECT_URI = (process.env.REDIRECT_URI) ? (process.env.REDIRECT_URI) : config.get('REDIRECT_URI');\n\nconst BUSINESS_ID = (process.env.BUSINESS_ID) ? (process.env.BUSINESS_ID) : config.get('BUSINESS_ID');\n\nParse.initialize(PARSE_APP_ID);\nParse.serverURL = PARSE_SERVER_URL;\nFB.options({\n    appId:          FACEBOOK_APP_ID,\n    appSecret:      APP_SECRET,\n    redirectUri:    REDIRECT_URI\n});\n\nbot.rules.set('hola', sendMenuMessage);\nbot.rules.set('buenos dias', sendMenuMessage);\nbot.rules.set('buenos tardes', sendMenuMessage);\nbot.rules.set('pedir a domicilio', sendAddressMenu);\nbot.rules.set('cuenta', sendBillMessage);\n\nbot.payloadRules.set('SendAddressMenu', sendAddressMenu);\nbot.payloadRules.set('SetAddress', setAddress)\nbot.payloadRules.set('SendCategories', sendCategories)\nbot.payloadRules.set('SendProducts', sendProducts)\nbot.payloadRules.set('AddProduct', addProduct)\nbot.payloadRules.set('SendBillMessage', sendBillMessage)\n\n\nconst initialState = {\n    geocodedLocation: {lat: -1, lng: -1},\n    addresses: [],\n    mapBounds: {},\n    mapAddress: '',\n    useSubCategories: false,\n    products: [],\n    pointOfSales: [],\n    categories: [],\n    paymentMethods: [],\n    consumer: {},\n    customer: {},\n    orders: { ongoing: [], delivered: [] },\n    orderToRate: null,\n    currentOrder: {\n        consumerAddress:{},\n        items: []\n    },\n    locationZoom: 3,\n    profileIsOpen: false,\n    mapAddressIsOpen: false,\n    addressFormIsOpen: false,\n    addressListIsOpen: false,\n    savingAddress: false,\n    creatingOrder: false,\n    paymentMethodNotSelected: false,\n    cartTotalIsBelowMinimumPrice: false,\n    currentCategory: {},\n    consumerNotFound: false,\n    updatingConsumer: false,\n    currentUser: {},\n    pendingOrder: false\n};\n\nconst reducer = (state = initialState, action) => {\n    console.log('ACTION');\n    console.log(action);\n    let item;\n    switch (action.type) {\n        case types.APP_LOADED:\n            console.log('Application is running on port', bot.app.get('port'));\n            return {...state};\n        case types.CONSUMER_UPDATED:\n            return {...state};\n        case types.CONSUMER_LOADED:\n            if (state.consumerNotFound) delete state.consumerNotFound\n            var consumer = extractParseAttributes(action.data.consumer)\n            //objectAssign(state.consumerAddress, {consumer})\n            objectAssign(state, {consumer, currentUser: action.data.user});\n            return {...state};\n        case types.CONSUMER_NOT_FOUND:\n            objectAssign(state, {\n                consumerNotFound: true,\n                currentUser: action.data.user\n            })\n            return {...state};\n        case types.CONSUMER_ADDRESSES_LOADED:\n            let addresses = action.data.map(a => extractParseAttributes(a))\n            objectAssign(state, {addresses: addresses})\n            return {...state};\n        case types.CONSUMER_ORDERS_LOADED:\n            const orders = action.data\n            let ongoing = orders['ongoing'].map(o => extractParseAttributes(o))\n            let delivered = orders['delivered'].map(o => extractParseAttributes(o))\n            let orderToRate = delivered[0]\n            objectAssign(state, {\n                orders: {ongoing, delivered},\n                orderToRate\n            })\n            return {...state}\n        case types.CUSTOMER_LOADED:\n            var customer = extractParseAttributes(action.data.customer)\n            objectAssign(state, {customer: customer});\n            return {...state}\n        case types.RENDER_MENU:\n            /*\n            console.log('Store');\n            console.log(store.getState())\n            console.log('Consumer');\n            console.log(consumer);*/\n            renderMenuMessage()\n\n            /*request({\n             uri: 'https://graph.facebook.com/v2.6/' + '1100195690052041',\n             qs: {access_token: PAGE_ACCESS_TOKEN, fields: 'first_name,last_name,locale,timezone,gender'},\n             method: 'GET'\n             }, renderMenuMessage);*/\n\n            return state;\n        case  types.RENDER_ADDRESS_MENU:\n\n            renderAddressMenuMessage()\n\n            return state;\n        default:\n            return state;\n    }\n}\n\nconst store = createStore(reducer, applyMiddleware(thunk));\n\nstore.subscribe(() =>\n    console.log('\\n') //store.getState())\n);\n\nglobal.Parse = Parse;\nglobal.FB = FB;\n\nfunction sendMenuMessage(recipientId) {\n    bot.sendTypingOn(recipientId);\n    store.dispatch(Actions.loadCustomer(BUSINESS_ID)).then(\n        () => {\n            new Parse.Query(ParseModels.User).get('y2DqRylTEb').then(\n                user => {\n                    store.dispatch(Actions.loadConsumer(user)).then(\n                        () => {\n                            renderMenuMessage(recipientId);\n                        }\n                    );\n                },\n                (object, error) => {\n                    console.log(error);\n                    // error is an instance of Parse.Error.\n                }\n            )\n        }\n    )\n}\n\nfunction renderMenuMessage(recipientId) {\n    var consumer = store.getState().consumer;\n    var customer = store.getState().customer;\n\n    //var currentUser = Parse.User.current();\n\n    var image_url = customer.image.url;\n    var messageData = {\n        recipient: {\n            id: recipientId\n        },\n        message: {\n            attachment: {\n                type: \"template\",\n                payload: {\n                    template_type: \"generic\",\n                    //text: \"Buenos dias, para conocer nuestros menus del dia, por favor escoja una opción:\",\n                    elements: [{\n                        \"title\":     \"Hola \"+consumer.name+\", Bienvenido a OXXO. \",\n                        \"subtitle\":  \"Aquí puedes pedir un domicilio, escribe o selecciona alguna de las opciones:\",\n                        \"image_url\": image_url,\n                        \"buttons\":[\n                            {\n                                \"type\":\"postback\",\n                                \"title\":\"Pedir a domicilio\",\n                                \"payload\": \"SendAddressMenu\"\n                            },\n                            {\n                                \"type\":\"postback\",\n                                \"title\":\"Pedir para recoger\",\n                                \"payload\": \"TakeOut\"\n                            },\n                            {\n                                \"type\":\"postback\",\n                                \"title\":\"Servicio al cliente\",\n                                \"payload\": \"CustomerService\"\n                            }\n                        ]\n                    }]\n                }\n            }\n        }\n    };\n\n    bot.sendTypingOff(recipientId);\n    bot.callSendAPI(messageData);\n\n}\n\nfunction sendAddressMenu(recipientId){\n    bot.sendTypingOn(recipientId);\n    var consumer = store.getState().consumer;\n    if(!_.isEmpty(consumer)){\n        store.dispatch(Actions.loadConsumerAddresses(consumer.rawParseObject)).then(\n            () => {\n                renderAddressMenuMessage(recipientId);\n            }\n        );\n    }\n    else{\n        store.dispatch(Actions.loadCustomer(BUSINESS_ID)).then(\n            () => {\n                new Parse.Query(ParseModels.User).get('y2DqRylTEb').then(\n                    user => {\n                        store.dispatch(Actions.loadConsumer(user)).then(\n                            () => {\n                                renderAddressMenuMessage(recipientId);\n                            }\n                        );\n                    },\n                    (object, error) => {\n                        console.log(error);\n                        // error is an instance of Parse.Error.\n                    }\n                )\n            }\n        )\n    }\n}\n\nfunction renderAddressMenuMessage(recipientId){\n    var addresses = store.getState().addresses\n\n    var messageData = {\n        recipient: {\n            id: recipientId\n        },\n        message: {\n            \"text\": \"A cual dirección vas hacer tu pedido?\",    //puedes escoger entre tus direcciones almacenadas o registrar una nueva\n            \"quick_replies\": [\n                {\n                    \"content_type\": \"text\",\n                    \"title\": \"Casa\",\n                    \"payload\": \"SetAddress-Home\"\n                },\n                {\n                    \"content_type\": \"text\",\n                    \"title\": \"Oficina\",\n                    \"payload\": \"SetAddress-Office\"\n                },\n                {\n                    \"content_type\": \"text\",\n                    \"title\": \"Nueva dirección\",\n                    \"payload\": \"NewAddress\"\n                }\n            ]\n        }\n    };\n\n    bot.sendTypingOff(recipientId);\n    bot.callSendAPI(messageData);\n}\n\nfunction setAddress(recipientId, args){\n    console.log('set address for purchase: '+args)\n    bot.sendTypingOn(recipientId);\n    renderAddressConfirmation(recipientId)\n}\n\nfunction renderAddressConfirmation(recipientId){\n    bot.sendTypingOff(recipientId);\n    var messageData = {\n        recipient: {\n            id: recipientId\n        },\n        message: {\n            \"text\": \"Perfecto, ya guardé tu dirección para próximos pedidos\"\n        }\n    };\n    bot.callSendAPI(messageData);\n\n    sendCategories(recipientId, 0)\n}\n\nfunction sendCategories(recipientId, catIdx){\n    bot.sendTypingOn(recipientId);\n    catIdx = parseInt(catIdx);\n\n    if(catIdx==0){\n        var messageData = {\n            recipient: {\n                id: recipientId\n            },\n            message: {\n                \"attachment\":{\n                    \"type\":\"template\",\n                    \"payload\":{\n                        \"template_type\":\"generic\",\n                        \"elements\":[\n                            {\n                                \"title\":\"Nuestros productos\",\n                                \"subtitle\":\"A continuación te presentamos las categorías de productos disponibles.\"\n                            }\n                        ]\n                    }\n                }\n            }\n        };\n        bot.callSendAPI(messageData);\n    }\n\n    Parse.Cloud.run('getProducts', { businessId: BUSINESS_ID }).then(\n        function(result){\n            var elements = splitCategories(result.categories, catIdx);\n            var idx = Object.keys(result.categories).length;\n            var buttons = [];\n            var catIni = (catIdx+1)*bot.limit;\n            var catFin =  (idx > catIni+bot.limit) ? catIni+bot.limit : idx;\n\n            console.log('length: '+idx);\n            console.log('catIni: '+catIni);\n            console.log('catFin: '+catFin);\n            console.log('limit: '+(catIdx+1)*bot.limit);\n\n            if(idx > (catIdx+1)*bot.limit){\n                buttons.push({\n                    type: \"postback\",\n                    title: \"Categorias \"+(catIni+1)+\"-\"+catFin,\n                    payload: \"SendCategories-\"+(catIdx+1),\n                });\n\n                elements.push({\n                    title: \"Más categorias \",\n                    subtitle: \"Categorias disponibles\",\n                    buttons: buttons\n                });\n            }\n\n            var messageData = {\n                recipient: {\n                    id: recipientId\n                },\n                message: {\n                    attachment: {\n                        type: \"template\",\n                        payload: {\n                            template_type: \"generic\",\n                            elements: elements\n                        }\n                    }\n                }\n            };\n\n            bot.sendTypingOff(recipientId);\n            bot.callSendAPI(messageData);\n\n        },\n        function(error) {\n\n        });\n}\n\nfunction splitCategories(categories, catIdx){\n    var idx = 0;\n    var elements = [];\n\n    categories.forEach(function(item){\n        //console.log(item.get('name'));\n        if(item && item.get('name')){\n            //console.log(elements.length);\n            if(idx >= (catIdx)*bot.limit && idx < (catIdx+1)*bot.limit){\n                var image = item.get('image');\n                var image_url = \"http://pro.parse.inoutdelivery.com/parse/files/hSMaiK7EXqDqRVYyY2fjIp4lBweiZnjpEmhH4LpJ/2671158f9c1cb43cac1423101b6e451b_image.txt\"\n                if(image){\n                    image_url = image.url();\n                }\n                elements.push({\n                    title: item.get('name'),\n                    //subtitle: item.get('name'),\n                    //item_url: \"http://www.mycolombianrecipes.com/fruit-cocktail-salpicon-de-frutas\",\n                    image_url: image_url,\n                    buttons: [{\n                        type: \"postback\",\n                        title: item.get('name'),\n                        payload: \"SendProducts-\"+item.id+\"-\"+catIdx,\n                    }]\n                })\n            }\n            idx = idx+1;\n        }\n    });\n    return elements;\n}\n\nfunction sendProducts(recipientId, category, proIdx){\n    bot.sendTypingOn(recipientId);\n    proIdx = parseInt(proIdx);\n\n    Parse.Cloud.run('getProducts', { businessId: BUSINESS_ID, category: category }).then(function(result) {\n\n            var elements = splitProducts(result.products, proIdx);\n            var idx = Object.keys(result.products).length;\n            var buttons = [];\n            var catIni = (proIdx+1)*bot.limit;\n            var catFin =  (idx > catIni+bot.limit) ? catIni+bot.limit : idx;\n\n            console.log('length: '+idx);\n            console.log('catIni: '+catIni);\n            console.log('catFin: '+catFin);\n            console.log('limit: '+(proIdx+1)*bot.limit);\n\n            if( idx > (proIdx+1)*bot.limit ){\n                buttons.push({\n                    type: \"postback\",\n                    title: \"Más productos \"+(catIni+1)+\"-\"+catFin,\n                    payload: \"SendProducts-\"+category+\"-\"+(proIdx+1),\n                });\n\n                elements.push({\n                    title: \"Más categorias \",\n                    subtitle: \"Categorias disponibles\",\n                    buttons: buttons\n                });\n            }\n\n            var messageData = {\n                recipient: {\n                    id: recipientId\n                },\n                message: {\n                    attachment: {\n                        type: \"template\",\n                        payload: {\n                            template_type: \"generic\",\n                            elements: elements\n                        }\n                    }\n                }\n            };\n\n            bot.sendTypingOff(recipientId);\n            bot.callSendAPI(messageData);\n        },\n        function(error) {\n\n        })\n}\n\nfunction splitProducts(products, proIdx){\n    var idx = 0;\n    var elements = [];\n\n    products.forEach(function(item){\n        if(item && item.get('name')){\n            if(idx >= (proIdx)*bot.limit && idx < (proIdx+1)*bot.limit){\n                var image = item.get('image');\n                var image_url = \"http://pro.parse.inoutdelivery.com/parse/files/hSMaiK7EXqDqRVYyY2fjIp4lBweiZnjpEmhH4LpJ/2671158f9c1cb43cac1423101b6e451b_image.txt\"\n                if(image){\n                    image_url = image.url();\n                }\n                elements.push({\n                    title: item.get('name') +\": $\"+ item.get('priceDefault'),\n                    subtitle: item.get('description'),\n                    //item_url: \"http://www.mycolombianrecipes.com/fruit-cocktail-salpicon-de-frutas\",\n                    image_url: image_url,\n                    buttons: [{\n                        type: \"postback\",\n                        title: \"Agregar\",\n                        payload: \"AddProduct-\"+item.id,\n                    }]\n                })\n            }\n            idx = idx+1;\n        }\n    });\n    return elements;\n}\n\nfunction addProduct(recipientId, id){\n    console.log(\"Add product: \"+id);\n    console.log(\"Order.count: \"+order.count());\n    if(!order.get(id)){\n        order.set(id, 1);\n    }\n    else{\n        order.set(id, order.get(id)+1);\n    }\n\n}\n\nfunction sendBillMessage(recipientId){\n    // Generate a random receipt ID as the API requires a unique ID\n    bot.sendTypingOn(recipientId);\n\n    var receiptId = \"order\" + Math.floor(Math.random()*1000);\n    var elements = [];\n    var element = {};\n    var total = 0;\n    var orderLimit = order.count();\n    var ind = 0;\n    var image;\n    var image_url;\n\n    console.log(order);\n\n    order.forEach(function(value, key){\n        var Product = Parse.Object.extend(\"Product\");\n        var product = new Parse.Query(Product);\n        console.log(key);\n\n        product.get(key, {\n            success: function (item) {\n                image = item.get('image');\n                image_url = \"http://pro.parse.inoutdelivery.com/parse/files/hSMaiK7EXqDqRVYyY2fjIp4lBweiZnjpEmhH4LpJ/2671158f9c1cb43cac1423101b6e451b_image.txt\"\n                if(image){\n                    image_url = image.url();\n                }\n\n                element = {}\n                element['title'] = item.get('name');\n                element['subtitle'] = item.get('description');\n                element['quantity'] = order.get(key);\n                element['price'] = parseInt(item.get('priceDefault'));\n                element['currency'] = \"COP\";\n                element['image_url'] = image_url;\n\n                elements.push(element);\n                total += element['quantity']*element['price'];\n\n                ind++;\n\n                if(ind == orderLimit){\n\n                    request({\n                        uri: 'https://graph.facebook.com/v2.6/'+recipientId,\n                        qs: { access_token: PAGE_ACCESS_TOKEN, fields: 'first_name,last_name,locale,timezone,gender' },\n                        method: 'GET'\n\n                    }, function (error, response, body) {\n                        if (!error && response.statusCode == 200) {\n                            var userData = JSON.parse(body);\n                            console.log(userData)\n\n                            var messageData = {\n                                recipient: {\n                                    id: recipientId\n                                },\n                                message:{\n                                    attachment: {\n                                        type: \"template\",\n                                        payload: {\n                                            template_type: \"receipt\",\n                                            recipient_name: userData.first_name+\" \"+userData.last_name,\n                                            order_number: receiptId,\n                                            currency: \"COP\",\n                                            payment_method: \"Visa 1234\",\n                                            timestamp: Math.trunc(Date.now()/1000).toString(),\n                                            elements: elements,\n                                            address: {\n                                                street_1: \"Carrera x con calle x\",\n                                                street_2: \"\",\n                                                city: \"Bucaramanga\",\n                                                postal_code: \"680001\",\n                                                state: \"SA\",\n                                                country: \"CO\"\n                                            },\n                                            summary: {\n                                                subtotal: total,\n                                                shipping_cost: 2000.00,\n                                                total_tax: total*0.16,\n                                                total_cost: total*1.16+2000.00\n                                            }\n                                            //adjustments: [{\n                                            //  name: \"New Customer Discount\",\n                                            //  amount: -1000\n                                            //}, {\n                                            //    name: \"$1000 Off Coupon\",\n                                            //    amount: -1000\n                                            //}]\n                                        }\n                                    }\n                                }\n                            };\n                            order = new HashMap();\n                            console.log(\"callSendAPI(messageData)\");\n                            bot.sendTypingOff(recipientId);\n                            bot.callSendAPI(messageData);\n\n                        }\n                    });\n                }\n            },\n            error: function (error) {\n                alert(\"Error: \" + error.code + \" \" + error.message);\n            }\n        })\n    });\n}\n\nstore.dispatch({type: types.APP_LOADED})\n\n/*\nconsole.log('Exist FB.init: '+( typeof FB.init === 'function') );\nconsole.log(FB.getLoginUrl({ scope: 'user_about_me' }));\n\n Parse.FacebookUtils.init({ // this line replaces FB.init({\n appId      : FACEBOOK_APP_ID, // Facebook App ID\n cookie     : true,  // enable cookies to allow Parse to access the session\n xfbml      : true,  // initialize Facebook social plugins on the page\n version    : 'v2.4' // point to the latest Facebook Graph API version\n });\n */\n\nvar order = new HashMap();\n\n\n\n\n\n\n\n\n\nfunction renderMenuMessageWithFacebook(error, response, body) {\n    /*\n     new Parse.Query(ParseModels.Consumer).equalTo('user', user).first().then(consumer => {\n     if (consumer) {\n     request({\n     uri: 'https://graph.facebook.com/v2.6/' + recipientId,\n     qs: {access_token: PAGE_ACCESS_TOKEN, fields: 'first_name,last_name,locale,timezone,gender'},\n     method: 'GET'\n     }, renderMenuMessageWithFacebook);\n     }\n     }).fail(error => {\n     console.log(error);\n     })\n     */\n\n    if (!error && response.statusCode == 200) {\n        var pathname = response.request.uri.pathname;\n        var recipientId = pathname.split('/').pop();\n        var userData = JSON.parse(body);\n        var commerce = new Parse.Query(ParseModels.Customer);\n\n        //user.equalTo('authData', {\"facebook\":        {\"access_token\":\"EAAPK2ME0gLkBAE6HMBKLP2RfquPvCIyaXNuItGYRdBpJNArGCZC9UzITl9ZBB7EKnmuukylXS93yhHOZAUiHjPwGyNBmnb11VPB7kf0Km9o2Gm2hFSJhDmjpZA1bfZCITRQ45OCMVAIWSR3jHIjkg3cze6tSvZBQjKdGkalGA1V7E0npkZAcMPn51z2yLAPJVRzRpbTqNCTtNPIhxpBr7H2\",\"expiration_date\":\"2016-10-02T15:16:42.000Z\",\"id\":\"10210218101474882\"}})\n\n        commerce.contains('businessId', BUSINESS_ID);\n\n        commerce.find().then(function(results){\n                var currentUser = Parse.User.current();\n                var image_url = results[0].get('image').url();\n\n                console.log('data');\n                console.log(userData);\n                console.log(recipientId);\n                console.log(results);\n                console.log(image_url);\n\n                /*\n                 first_name: 'John',\n                 last_name: 'Garavito Suárez',\n                 locale: 'en_US',\n                 timezone: -5,\n                 gender: 'male' }\n                * */\n\n                var messageData = {\n                    recipient: {\n                        id: recipientId\n                    },\n                    message: {\n                        attachment: {\n                            type: \"template\",\n                            payload: {\n                                template_type: \"generic\",\n                                //text: \"Buenos dias, para conocer nuestros menus del dia, por favor escoja una opción:\",\n                                elements: [{\n                                    \"title\":     \"Hola \"+userData.first_name+\", Bienvenido a OXXO. \",\n                                    \"subtitle\":  \"Aquí puedes pedir un domicilio, escribe o selecciona alguna de las opciones:\",\n                                    \"image_url\": image_url,\n                                    \"buttons\":[\n                                        {\n                                            \"type\":\"postback\",\n                                            \"title\":\"Pedir a domicilio\",\n                                            \"payload\":\"ListCategories-0\"\n                                        },\n                                        {\n                                            \"type\":\"postback\",\n                                            \"title\":\"Pedir para recoger\",\n                                            \"payload\":\"ListCategories-0\"\n                                        },\n                                        {\n                                            \"type\":\"postback\",\n                                            \"title\":\"Servicio al cliente\",\n                                            \"payload\":\"ListCategories-0\"\n                                        }\n                                    ]\n                                }]\n                            }\n                        }\n                    }\n                };\n\n                bot.sendTypingOff(recipientId);\n                bot.callSendAPI(messageData);\n            },\n            function(error) {\n                console.log(\"Lookup failed\");\n            });\n    } else {\n        console.error(response.error);\n    }\n}\n\nfunction renderAddressMenuMessageOld(recipientId){\n    var addresses = store.getState().addresses\n\n    var messageData = {\n        recipient: {\n            id: recipientId\n        },\n        message: {\n            \"attachment\":{\n                \"type\":\"template\",\n                \"payload\":{\n                    \"template_type\": \"button\",\n                    \"text\":\"A cual dirección vas hacer tu pedido, puedes escoger entre tus direcciones almacenadas o registrar una nueva\",\n                    \"buttons\":[\n                        {\n                            \"type\":\"postback\",\n                            \"title\":\"Address 1\",\n                            \"payload\":\"USER_DEFINED_PAYLOAD\"\n                        },\n                        {\n                            \"type\":\"postback\",\n                            \"title\":\"Address 2\",\n                            \"payload\":\"USER_DEFINED_PAYLOAD\"\n                        }\n                    ]\n                }\n            }\n        }\n    };\n\n    bot.sendTypingOff(recipientId);\n    bot.callSendAPI(messageData);\n}\n\n"]}