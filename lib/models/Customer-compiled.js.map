{"version":3,"sources":["Customer.js"],"names":[],"mappings":";;;;;;AAAA;;AAGA,IAAM,WAAW,MAAM,MAAN,CAAa,MAAb,CAAoB,UAApB,EAAgC;AAC7C,gBAAY,oBAAU,KAAV,EAAiB,OAAjB,EAA0B;AAClC;;;;;;;;;;AAUH,KAZ4C;AAa7C,iBAAa,qBAAS,KAAT,EAAgB,WAAhB,EAA4B;AACrC,eAAO,MAAM,QAAN,CAAe,wBAAY,WAAZ,EAAyB,IAAzB,CAAf,EAA+C,IAA/C,CAAoD,iBAAS;AAChE,oBAAQ,GAAR,CAAY,iBAAiB,MAAM,OAAnC;AACH,SAFM,CAAP;AAGH;AAjB4C,CAAhC,CAAjB;;kBAoBe,Q","file":"Customer-compiled.js","sourcesContent":["import { setCustomer } from '../actions/index';\n\n\nconst Customer = Parse.Object.extend('Customer', {\n    initialize: function (attrs, options) {\n        /*let user = attrs.user;\n        console.log('Consumer user param');\n        console.log(user);\n        this.set('name', user.get('first_name')+\" \"+user.get('last_name'));\n        this.set('user', {\n            __type: \"Pointer\",\n            className: \"User\",\n            objectId: user.id\n        });\n        console.log(this.get('user'))*/\n    },\n    saveInStore: function(store, recipientId){\n        return store.dispatch(setCustomer(recipientId, this)).fail(error => {\n            console.log('Error code: ' + error.message);\n        });\n    }\n});\n\nexport default Consumer"]}